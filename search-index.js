var searchIndex = {};
searchIndex["trek"] = {"doc":"","items":[[5,"create_migration","trek","A convenience method that automates creating a new, empty database migration from a name and a\ndirectory where the new migration file should be created.",null,{"inputs":[{"name":"str"},{"name":"path"}],"output":{"name":"result"}}],[0,"error","","",null,null],[3,"Error","trek::error","An Error type for wrapping database errors in a higher-level message. For example, a database\nerror may indicate a query failed but it would be more meaningful to provide a higher-level\nerror message explaining what the query was trying to do.",null,null],[11,"fmt","","",0,null],[11,"new","","Wrap a new database error with a message.",0,{"inputs":[{"name":"string"},{"name":"error"}],"output":{"name":"self"}}],[11,"cause","","Get the original error.",0,null],[11,"description","","",0,null],[11,"fmt","","",0,null],[0,"migration","trek","",null,null],[8,"Migration","trek::migration","",null,null],[10,"up","","Applies this migration.",1,null],[10,"down","","Undoes this migration.",1,null],[0,"migration_index","trek","",null,null],[3,"MigrationIndex","trek::migration_index","Tracks and manages database migrations for this system.",null,null],[11,"new","","Wrap the given Migrations list into a new MigrationIndex.",2,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"run","","Runs all database migrations that haven&#39;t yet been applied to the database.",2,null],[11,"rollback","","Rolls back the last database migration that was successfully applied to the database.",2,null],[11,"schema_version","","Takes a queryable connection object and returns the current version of the database&#39;s\nschema. No changes are made to the database.",2,{"inputs":[{"name":"genericconnection"}],"output":{"name":"result"}}],[6,"Result","trek","A type alias for the result type used by most of the methods in this crate&#39;s API.",null,null]],"paths":[[3,"Error"],[8,"Migration"],[3,"MigrationIndex"]]};
searchIndex["postgres"] = {"doc":"A pure-Rust frontend for the popular PostgreSQL database.","items":[[3,"LoggingNoticeHandler","postgres","A notice handler which logs at the `info` level.",null,null],[3,"CancelData","","Contains information necessary to cancel queries for a session.",null,null],[12,"process_id","","The process ID of the session.",0,null],[12,"secret_key","","The secret key for the session.",0,null],[3,"Connection","","A connection to a Postgres database.",null,null],[4,"TlsMode","","Specifies the TLS support requested for a new connection.",null,null],[13,"None","","The connection will not use TLS.",1,null],[13,"Prefer","","The connection will use TLS if the backend supports it.",1,null],[13,"Require","","The connection must use TLS.",1,null],[5,"cancel_query","","Attempts to cancel an in-progress query.",null,{"inputs":[{"name":"t"},{"name":"tlsmode"},{"name":"canceldata"}],"output":{"name":"result"}}],[0,"error","","Error types.",null,null],[3,"DbError","postgres::error","A Postgres error or notice.",null,null],[12,"severity","","The field contents are ERROR, FATAL, or PANIC (in an error message),\nor WARNING, NOTICE, DEBUG, INFO, or LOG (in a notice message), or a\nlocalized translation of one of these.",2,null],[12,"code","","The SQLSTATE code for the error.",2,null],[12,"message","","The primary human-readable error message. This should be accurate but\nterse (typically one line).",2,null],[12,"detail","","An optional secondary error message carrying more detail about the\nproblem. Might run to multiple lines.",2,null],[12,"hint","","An optional suggestion what to do about the problem. This is intended\nto differ from Detail in that it offers advice (potentially\ninappropriate) rather than hard facts. Might run to multiple lines.",2,null],[12,"position","","An optional error cursor position into either the original query string\nor an internally generated query.",2,null],[12,"where_","","An indication of the context in which the error occurred. Presently\nthis includes a call stack traceback of active procedural language\nfunctions and internally-generated queries. The trace is one entry per\nline, most recent first.",2,null],[12,"schema","","If the error was associated with a specific database object, the name\nof the schema containing that object, if any. (PostgreSQL 9.3+)",2,null],[12,"table","","If the error was associated with a specific table, the name of the\ntable. (Refer to the schema name field for the name of the table&#39;s\nschema.) (PostgreSQL 9.3+)",2,null],[12,"column","","If the error was associated with a specific table column, the name of\nthe column. (Refer to the schema and table name fields to identify the\ntable.) (PostgreSQL 9.3+)",2,null],[12,"datatype","","If the error was associated with a specific data type, the name of the\ndata type. (Refer to the schema name field for the name of the data\ntype&#39;s schema.) (PostgreSQL 9.3+)",2,null],[12,"constraint","","If the error was associated with a specific constraint, the name of the\nconstraint. Refer to fields listed above for the associated table or\ndomain. (For this purpose, indexes are treated as constraints, even if\nthey weren&#39;t created with constraint syntax.) (PostgreSQL 9.3+)",2,null],[12,"file","","The file name of the source-code location where the error was reported.",2,null],[12,"line","","The line number of the source-code location where the error was\nreported.",2,null],[12,"routine","","The name of the source-code routine reporting the error.",2,null],[4,"SqlState","","SQLSTATE error codes",null,null],[13,"SuccessfulCompletion","","`00000`",3,null],[13,"Warning","","`01000`",3,null],[13,"DynamicResultSetsReturned","","`0100C`",3,null],[13,"ImplicitZeroBitPadding","","`01008`",3,null],[13,"NullValueEliminatedInSetFunction","","`01003`",3,null],[13,"PrivilegeNotGranted","","`01007`",3,null],[13,"PrivilegeNotRevoked","","`01006`",3,null],[13,"WarningStringDataRightTruncation","","`01004`",3,null],[13,"DeprecatedFeature","","`01P01`",3,null],[13,"NoData","","`02000`",3,null],[13,"NoAdditionalDynamicResultSetsReturned","","`02001`",3,null],[13,"SqlStatementNotYetComplete","","`03000`",3,null],[13,"ConnectionException","","`08000`",3,null],[13,"ConnectionDoesNotExist","","`08003`",3,null],[13,"ConnectionFailure","","`08006`",3,null],[13,"SqlclientUnableToEstablishSqlconnection","","`08001`",3,null],[13,"SqlserverRejectedEstablishmentOfSqlconnection","","`08004`",3,null],[13,"TransactionResolutionUnknown","","`08007`",3,null],[13,"ProtocolViolation","","`08P01`",3,null],[13,"TriggeredActionException","","`09000`",3,null],[13,"FeatureNotSupported","","`0A000`",3,null],[13,"InvalidTransactionInitiation","","`0B000`",3,null],[13,"LocatorException","","`0F000`",3,null],[13,"InvalidLocatorSpecification","","`0F001`",3,null],[13,"InvalidGrantor","","`0L000`",3,null],[13,"InvalidGrantOperation","","`0LP01`",3,null],[13,"InvalidRoleSpecification","","`0P000`",3,null],[13,"DiagnosticsException","","`0Z000`",3,null],[13,"StackedDiagnosticsAccessedWithoutActiveHandler","","`0Z002`",3,null],[13,"CaseNotFound","","`20000`",3,null],[13,"CardinalityViolation","","`21000`",3,null],[13,"DataException","","`22000`",3,null],[13,"ArraySubscriptError","","`2202E`",3,null],[13,"CharacterNotInRepertoire","","`22021`",3,null],[13,"DatetimeFieldOverflow","","`22008`",3,null],[13,"DivisionByZero","","`22012`",3,null],[13,"ErrorInAssignment","","`22005`",3,null],[13,"EscapeCharacterConflict","","`2200B`",3,null],[13,"IndicatorOverflow","","`22022`",3,null],[13,"IntervalFieldOverflow","","`22015`",3,null],[13,"InvalidArgumentForLogarithm","","`2201E`",3,null],[13,"InvalidArgumentForNtileFunction","","`22014`",3,null],[13,"InvalidArgumentForNthValueFunction","","`22016`",3,null],[13,"InvalidArgumentForPowerFunction","","`2201F`",3,null],[13,"InvalidArgumentForWidthBucketFunction","","`2201G`",3,null],[13,"InvalidCharacterValueForCast","","`22018`",3,null],[13,"InvalidDatetimeFormat","","`22007`",3,null],[13,"InvalidEscapeCharacter","","`22019`",3,null],[13,"InvalidEscapeOctet","","`2200D`",3,null],[13,"InvalidEscapeSequence","","`22025`",3,null],[13,"NonstandardUseOfEscapeCharacter","","`22P06`",3,null],[13,"InvalidIndicatorParameterValue","","`22010`",3,null],[13,"InvalidParameterValue","","`22023`",3,null],[13,"InvalidRegularExpression","","`2201B`",3,null],[13,"InvalidRowCountInLimitClause","","`2201W`",3,null],[13,"InvalidRowCountInResultOffsetClause","","`2201X`",3,null],[13,"InvalidTablesampleArgument","","`2202H`",3,null],[13,"InvalidTablesampleRepeat","","`2202G`",3,null],[13,"InvalidTimeZoneDisplacementValue","","`22009`",3,null],[13,"InvalidUseOfEscapeCharacter","","`2200C`",3,null],[13,"MostSpecificTypeMismatch","","`2200G`",3,null],[13,"DataNullValueNotAllowed","","`22004`",3,null],[13,"NullValueNoIndicatorParameter","","`22002`",3,null],[13,"NumericValueOutOfRange","","`22003`",3,null],[13,"StringDataLengthMismatch","","`22026`",3,null],[13,"DataStringDataRightTruncation","","`22001`",3,null],[13,"SubstringError","","`22011`",3,null],[13,"TrimError","","`22027`",3,null],[13,"UnterminatedCString","","`22024`",3,null],[13,"ZeroLengthCharacterString","","`2200F`",3,null],[13,"FloatingPointException","","`22P01`",3,null],[13,"InvalidTextRepresentation","","`22P02`",3,null],[13,"InvalidBinaryRepresentation","","`22P03`",3,null],[13,"BadCopyFileFormat","","`22P04`",3,null],[13,"UntranslatableCharacter","","`22P05`",3,null],[13,"NotAnXmlDocument","","`2200L`",3,null],[13,"InvalidXmlDocument","","`2200M`",3,null],[13,"InvalidXmlContent","","`2200N`",3,null],[13,"InvalidXmlComment","","`2200S`",3,null],[13,"InvalidXmlProcessingInstruction","","`2200T`",3,null],[13,"IntegrityConstraintViolation","","`23000`",3,null],[13,"RestrictViolation","","`23001`",3,null],[13,"NotNullViolation","","`23502`",3,null],[13,"ForeignKeyViolation","","`23503`",3,null],[13,"UniqueViolation","","`23505`",3,null],[13,"CheckViolation","","`23514`",3,null],[13,"ExclusionViolation","","`23P01`",3,null],[13,"InvalidCursorState","","`24000`",3,null],[13,"InvalidTransactionState","","`25000`",3,null],[13,"ActiveSqlTransaction","","`25001`",3,null],[13,"BranchTransactionAlreadyActive","","`25002`",3,null],[13,"HeldCursorRequiresSameIsolationLevel","","`25008`",3,null],[13,"InappropriateAccessModeForBranchTransaction","","`25003`",3,null],[13,"InappropriateIsolationLevelForBranchTransaction","","`25004`",3,null],[13,"NoActiveSqlTransactionForBranchTransaction","","`25005`",3,null],[13,"ReadOnlySqlTransaction","","`25006`",3,null],[13,"SchemaAndDataStatementMixingNotSupported","","`25007`",3,null],[13,"NoActiveSqlTransaction","","`25P01`",3,null],[13,"InFailedSqlTransaction","","`25P02`",3,null],[13,"IdleInTransactionSessionTimeout","","`25P03`",3,null],[13,"InvalidSqlStatementName","","`26000`",3,null],[13,"TriggeredDataChangeViolation","","`27000`",3,null],[13,"InvalidAuthorizationSpecification","","`28000`",3,null],[13,"InvalidPassword","","`28P01`",3,null],[13,"DependentPrivilegeDescriptorsStillExist","","`2B000`",3,null],[13,"DependentObjectsStillExist","","`2BP01`",3,null],[13,"InvalidTransactionTermination","","`2D000`",3,null],[13,"SqlRoutineException","","`2F000`",3,null],[13,"FunctionExecutedNoReturnStatement","","`2F005`",3,null],[13,"SqlRoutineModifyingSqlDataNotPermitted","","`2F002`",3,null],[13,"SqlRoutineProhibitedSqlStatementAttempted","","`2F003`",3,null],[13,"SqlRoutineReadingSqlDataNotPermitted","","`2F004`",3,null],[13,"InvalidCursorName","","`34000`",3,null],[13,"ExternalRoutineException","","`38000`",3,null],[13,"ContainingSqlNotPermitted","","`38001`",3,null],[13,"ForeignRoutineModifyingSqlDataNotPermitted","","`38002`",3,null],[13,"ForeignRoutineProhibitedSqlStatementAttempted","","`38003`",3,null],[13,"ForeignRoutineReadingSqlDataNotPermitted","","`38004`",3,null],[13,"ExternalRoutineInvocationException","","`39000`",3,null],[13,"InvalidSqlstateReturned","","`39001`",3,null],[13,"ExternalRoutineInvocationNullValueNotAllowed","","`39004`",3,null],[13,"TriggerProtocolViolated","","`39P01`",3,null],[13,"SrfProtocolViolated","","`39P02`",3,null],[13,"EventTriggerProtocolViolated","","`39P03`",3,null],[13,"SavepointException","","`3B000`",3,null],[13,"InvalidSavepointSpecification","","`3B001`",3,null],[13,"InvalidCatalogName","","`3D000`",3,null],[13,"InvalidSchemaName","","`3F000`",3,null],[13,"TransactionRollback","","`40000`",3,null],[13,"TransactionIntegrityConstraintViolation","","`40002`",3,null],[13,"SerializationFailure","","`40001`",3,null],[13,"StatementCompletionUnknown","","`40003`",3,null],[13,"DeadlockDetected","","`40P01`",3,null],[13,"SyntaxErrorOrAccessRuleViolation","","`42000`",3,null],[13,"SyntaxError","","`42601`",3,null],[13,"InsufficientPrivilege","","`42501`",3,null],[13,"CannotCoerce","","`42846`",3,null],[13,"GroupingError","","`42803`",3,null],[13,"WindowingError","","`42P20`",3,null],[13,"InvalidRecursion","","`42P19`",3,null],[13,"InvalidForeignKey","","`42830`",3,null],[13,"InvalidName","","`42602`",3,null],[13,"NameTooLong","","`42622`",3,null],[13,"ReservedName","","`42939`",3,null],[13,"DatatypeMismatch","","`42804`",3,null],[13,"IndeterminateDatatype","","`42P18`",3,null],[13,"CollationMismatch","","`42P21`",3,null],[13,"IndeterminateCollation","","`42P22`",3,null],[13,"WrongObjectType","","`42809`",3,null],[13,"UndefinedColumn","","`42703`",3,null],[13,"UndefinedFunction","","`42883`",3,null],[13,"UndefinedTable","","`42P01`",3,null],[13,"UndefinedParameter","","`42P02`",3,null],[13,"UndefinedObject","","`42704`",3,null],[13,"DuplicateColumn","","`42701`",3,null],[13,"DuplicateCursor","","`42P03`",3,null],[13,"DuplicateDatabase","","`42P04`",3,null],[13,"DuplicateFunction","","`42723`",3,null],[13,"DuplicatePreparedStatement","","`42P05`",3,null],[13,"DuplicateSchema","","`42P06`",3,null],[13,"DuplicateTable","","`42P07`",3,null],[13,"DuplicateAlias","","`42712`",3,null],[13,"DuplicateObject","","`42710`",3,null],[13,"AmbiguousColumn","","`42702`",3,null],[13,"AmbiguousFunction","","`42725`",3,null],[13,"AmbiguousParameter","","`42P08`",3,null],[13,"AmbiguousAlias","","`42P09`",3,null],[13,"InvalidColumnReference","","`42P10`",3,null],[13,"InvalidColumnDefinition","","`42611`",3,null],[13,"InvalidCursorDefinition","","`42P11`",3,null],[13,"InvalidDatabaseDefinition","","`42P12`",3,null],[13,"InvalidFunctionDefinition","","`42P13`",3,null],[13,"InvalidPreparedStatementDefinition","","`42P14`",3,null],[13,"InvalidSchemaDefinition","","`42P15`",3,null],[13,"InvalidTableDefinition","","`42P16`",3,null],[13,"InvalidObjectDefinition","","`42P17`",3,null],[13,"WithCheckOptionViolation","","`44000`",3,null],[13,"InsufficientResources","","`53000`",3,null],[13,"DiskFull","","`53100`",3,null],[13,"OutOfMemory","","`53200`",3,null],[13,"TooManyConnections","","`53300`",3,null],[13,"ConfigurationLimitExceeded","","`53400`",3,null],[13,"ProgramLimitExceeded","","`54000`",3,null],[13,"StatementTooComplex","","`54001`",3,null],[13,"TooManyColumns","","`54011`",3,null],[13,"TooManyArguments","","`54023`",3,null],[13,"ObjectNotInPrerequisiteState","","`55000`",3,null],[13,"ObjectInUse","","`55006`",3,null],[13,"CantChangeRuntimeParam","","`55P02`",3,null],[13,"LockNotAvailable","","`55P03`",3,null],[13,"OperatorIntervention","","`57000`",3,null],[13,"QueryCanceled","","`57014`",3,null],[13,"AdminShutdown","","`57P01`",3,null],[13,"CrashShutdown","","`57P02`",3,null],[13,"CannotConnectNow","","`57P03`",3,null],[13,"DatabaseDropped","","`57P04`",3,null],[13,"SystemError","","`58000`",3,null],[13,"IoError","","`58030`",3,null],[13,"UndefinedFile","","`58P01`",3,null],[13,"DuplicateFile","","`58P02`",3,null],[13,"SnapshotTooOld","","`72000`",3,null],[13,"ConfigFileError","","`F0000`",3,null],[13,"LockFileExists","","`F0001`",3,null],[13,"FdwError","","`HV000`",3,null],[13,"FdwColumnNameNotFound","","`HV005`",3,null],[13,"FdwDynamicParameterValueNeeded","","`HV002`",3,null],[13,"FdwFunctionSequenceError","","`HV010`",3,null],[13,"FdwInconsistentDescriptorInformation","","`HV021`",3,null],[13,"FdwInvalidAttributeValue","","`HV024`",3,null],[13,"FdwInvalidColumnName","","`HV007`",3,null],[13,"FdwInvalidColumnNumber","","`HV008`",3,null],[13,"FdwInvalidDataType","","`HV004`",3,null],[13,"FdwInvalidDataTypeDescriptors","","`HV006`",3,null],[13,"FdwInvalidDescriptorFieldIdentifier","","`HV091`",3,null],[13,"FdwInvalidHandle","","`HV00B`",3,null],[13,"FdwInvalidOptionIndex","","`HV00C`",3,null],[13,"FdwInvalidOptionName","","`HV00D`",3,null],[13,"FdwInvalidStringLengthOrBufferLength","","`HV090`",3,null],[13,"FdwInvalidStringFormat","","`HV00A`",3,null],[13,"FdwInvalidUseOfNullPointer","","`HV009`",3,null],[13,"FdwTooManyHandles","","`HV014`",3,null],[13,"FdwOutOfMemory","","`HV001`",3,null],[13,"FdwNoSchemas","","`HV00P`",3,null],[13,"FdwOptionNameNotFound","","`HV00J`",3,null],[13,"FdwReplyHandle","","`HV00K`",3,null],[13,"FdwSchemaNotFound","","`HV00Q`",3,null],[13,"FdwTableNotFound","","`HV00R`",3,null],[13,"FdwUnableToCreateExecution","","`HV00L`",3,null],[13,"FdwUnableToCreateReply","","`HV00M`",3,null],[13,"FdwUnableToEstablishConnection","","`HV00N`",3,null],[13,"PlpgsqlError","","`P0000`",3,null],[13,"RaiseException","","`P0001`",3,null],[13,"NoDataFound","","`P0002`",3,null],[13,"TooManyRows","","`P0003`",3,null],[13,"AssertFailure","","`P0004`",3,null],[13,"InternalError","","`XX000`",3,null],[13,"DataCorrupted","","`XX001`",3,null],[13,"IndexCorrupted","","`XX002`",3,null],[13,"Other","","An unknown code",3,null],[4,"ConnectError","","Reasons a new Postgres connection could fail.",null,null],[13,"ConnectParams","","An error relating to connection parameters.",4,null],[13,"Db","","An error from the Postgres server itself.",4,null],[13,"Tls","","An error initializing the TLS session.",4,null],[13,"Io","","An error communicating with the server.",4,null],[4,"ErrorPosition","","Represents the position of an error in a query.",null,null],[13,"Normal","","A position in the original query.",5,null],[13,"Internal","","A position in an internally generated query.",5,null],[12,"position","postgres::error::ErrorPosition","The byte position.",5,null],[12,"query","","A query generated by the Postgres server.",5,null],[4,"Error","postgres::error","An error encountered when communicating with the Postgres server.",null,null],[13,"Db","","An error reported by the Postgres server.",6,null],[13,"Io","","An error communicating with the Postgres server.",6,null],[13,"Conversion","","An error converting between Postgres and Rust types.",6,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"from_code","","Creates a `SqlState` from its error code.",3,{"inputs":[{"name":"string"}],"output":{"name":"sqlstate"}}],[11,"code","","Returns the error code corresponding to the `SqlState`.",3,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"description","","",4,null],[11,"cause","","",4,null],[11,"from","","",4,{"inputs":[{"name":"error"}],"output":{"name":"connecterror"}}],[11,"from","","",4,{"inputs":[{"name":"dberror"}],"output":{"name":"connecterror"}}],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"cause","","",6,null],[11,"from","","",6,{"inputs":[{"name":"dberror"}],"output":{"name":"error"}}],[11,"from","","",6,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[0,"tls","postgres","Types and traits for TLS support.",null,null],[3,"Stream","postgres::tls","A connection to the Postgres server.",null,null],[8,"TlsStream","","A trait implemented by TLS streams.",null,null],[10,"get_ref","","Returns a reference to the underlying `Stream`.",7,null],[10,"get_mut","","Returns a mutable reference to the underlying `Stream`.",7,null],[8,"TlsHandshake","","A trait implemented by types that can initiate a TLS session over a Postgres\nstream.",null,null],[10,"tls_handshake","","Performs a client-side TLS handshake, returning a wrapper around the\nprovided stream.",8,null],[0,"notification","postgres","Asynchronous notifications.",null,null],[3,"Notification","postgres::notification","An asynchronous notification.",null,null],[12,"process_id","","The process ID of the notifying backend process.",9,null],[12,"channel","","The name of the channel that the notify has been raised on.",9,null],[12,"payload","","The &quot;payload&quot; string passed from the notifying process.",9,null],[3,"Notifications","","Notifications from the Postgres backend.",null,null],[3,"Iter","","A fallible iterator over pending notifications.",null,null],[3,"BlockingIter","","An iterator over notifications which will block if none are pending.",null,null],[3,"TimeoutIter","","An iterator over notifications which will block for a period of time if\nnone are pending.",null,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"len","","Returns the number of pending notifications.",10,null],[11,"is_empty","","Determines if there are any pending notifications.",10,null],[11,"iter","","Returns a fallible iterator over pending notifications.",10,null],[11,"blocking_iter","","Returns a fallible iterator over notifications that blocks until one is\nreceived if none are pending.",10,null],[11,"timeout_iter","","Returns a fallible iterator over notifications that blocks for a limited\ntime waiting to receive one if none are pending.",10,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"next","","",12,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[0,"params","postgres","Connection parameters",null,null],[3,"UserInfo","postgres::params","Authentication information.",null,null],[12,"user","","The username.",14,null],[12,"password","","An optional password.",14,null],[3,"ConnectParams","","Information necessary to open a new connection to a Postgres server.",null,null],[12,"target","","The target server.",15,null],[12,"port","","The target port.",15,null],[12,"user","","The user to login as.",15,null],[12,"database","","The database to connect to.",15,null],[12,"options","","Runtime parameters to be passed to the Postgres backend.",15,null],[4,"ConnectTarget","","Specifies the target server to connect to.",null,null],[13,"Tcp","","Connect via TCP to the specified host.",16,null],[13,"Unix","","Connect via a Unix domain socket in the specified directory.",16,null],[8,"IntoConnectParams","","A trait implemented by types that can be converted into a `ConnectParams`.",null,null],[10,"into_connect_params","","Converts the value of `self` into a `ConnectParams`.",17,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"into_connect_params","","",15,null],[0,"rows","postgres","Query result rows.",null,null],[3,"Rows","postgres::rows","The resulting rows of a query.",null,null],[3,"Iter","","An iterator over `Row`s.",null,null],[3,"Row","","A single result row of a query.",null,null],[3,"LazyRows","","A lazily-loaded iterator over the resulting rows of a query.",null,null],[8,"RowIndex","","A trait implemented by types that can index into columns of a row.",null,null],[10,"idx","","Returns the index of the appropriate column, or `None` if no such\ncolumn exists.",18,null],[11,"fmt","","",19,null],[11,"columns","","Returns a slice describing the columns of the `Rows`.",19,null],[11,"len","","Returns the number of rows present.",19,null],[11,"is_empty","","Determines if there are any rows present.",19,null],[11,"get","","Returns a specific `Row`.",19,null],[11,"iter","","Returns an iterator over the `Row`s.",19,null],[11,"next","","",20,null],[11,"size_hint","","",20,null],[11,"next_back","","",20,null],[11,"fmt","","",21,null],[11,"len","","Returns the number of values in the row.",21,null],[11,"is_empty","","Determines if there are any values in the row.",21,null],[11,"columns","","Returns a slice describing the columns of the `Row`.",21,null],[11,"get","","Retrieves the contents of a field of the row.",21,null],[11,"get_opt","","Retrieves the contents of a field of the row.",21,null],[11,"get_bytes","","Retrieves the specified field as a raw buffer of Postgres data.",21,null],[11,"drop","","",22,null],[11,"fmt","","",22,null],[11,"columns","","Returns a slice describing the columns of the `LazyRows`.",22,null],[11,"finish","","Consumes the `LazyRows`, cleaning up associated state.",22,null],[11,"next","","",22,null],[11,"size_hint","","",22,null],[0,"stmt","postgres","Prepared statements",null,null],[3,"Statement","postgres::stmt","A prepared statement.",null,null],[3,"Column","","Information about a column of the result of a query.",null,null],[3,"CopyInfo","","A struct containing information relevant for a `COPY` operation.",null,null],[4,"Format","","The format of a portion of COPY query data.",null,null],[13,"Text","","A text based format.",23,null],[13,"Binary","","A binary format.",23,null],[8,"ReadWithInfo","","Like `Read` except that a `CopyInfo` object is provided as well.",null,null],[10,"read_with_info","","Like `Read::read`.",24,null],[8,"WriteWithInfo","","Like `Write` except that a `CopyInfo` object is provided as well.",null,null],[10,"write_with_info","","Like `Write::write`.",25,null],[11,"fmt","","",26,null],[11,"drop","","",26,null],[11,"param_types","","Returns a slice containing the expected parameter types.",26,null],[11,"columns","","Returns a slice describing the columns of the result of the query.",26,null],[11,"execute","","Executes the prepared statement, returning the number of rows modified.",26,null],[11,"query","","Executes the prepared statement, returning the resulting rows.",26,null],[11,"lazy_query","","Executes the prepared statement, returning a lazily loaded iterator\nover the resulting rows.",26,null],[11,"copy_in","","Executes a `COPY FROM STDIN` statement, returning the number of rows\nadded.",26,null],[11,"copy_out","","Executes a `COPY TO STDOUT` statement, passing the resulting data to\nthe provided writer and returning the number of rows received.",26,null],[11,"finish","","Consumes the statement, clearing it from the Postgres session.",26,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"name","","The name of the column.",27,null],[11,"type_","","The type of the data in the column.",27,null],[11,"format","","Returns the format of the overall data.",28,null],[11,"column_formats","","Returns the format of the individual columns.",28,null],[11,"session_info","","Returns session info for the associated connection.",28,null],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"eq","","",23,null],[0,"transaction","postgres","Transactions",null,null],[3,"Config","postgres::transaction","Configuration of a transaction.",null,null],[3,"Transaction","","A transaction on a database connection.",null,null],[4,"IsolationLevel","","An enumeration of transaction isolation levels.",null,null],[13,"ReadUncommitted","","The &quot;read uncommitted&quot; level.",29,null],[13,"ReadCommitted","","The &quot;read committed&quot; level.",29,null],[13,"RepeatableRead","","The &quot;repeatable read&quot; level.",29,null],[13,"Serializable","","The &quot;serializable&quot; level.",29,null],[11,"fmt","","",29,null],[11,"clone","","",29,null],[11,"eq","","",29,null],[11,"fmt","","",30,null],[11,"default","","",30,{"inputs":[],"output":{"name":"config"}}],[11,"new","","Creates a new `Config` with no configuration overrides.",30,{"inputs":[],"output":{"name":"config"}}],[11,"isolation_level","","Sets the isolation level of the configuration.",30,null],[11,"read_only","","Sets the read-only property of a transaction.",30,null],[11,"deferrable","","Sets the deferrable property of a transaction.",30,null],[11,"fmt","","",31,null],[11,"drop","","",31,null],[11,"prepare","","Like `Connection::prepare`.",31,null],[11,"prepare_cached","","Like `Connection::prepare_cached`.",31,null],[11,"execute","","Like `Connection::execute`.",31,null],[11,"query","","Like `Connection::query`.",31,null],[11,"batch_execute","","Like `Connection::batch_execute`.",31,null],[11,"transaction","","Like `Connection::transaction`, but creates a nested transaction via\na savepoint.",31,null],[11,"savepoint","","Like `Connection::transaction`, but creates a nested transaction via\na savepoint with the specified name.",31,null],[11,"connection","","Returns a reference to the `Transaction`&#39;s `Connection`.",31,null],[11,"is_active","","Like `Connection::is_active`.",31,null],[11,"set_config","","Alters the configuration of the active transaction.",31,null],[11,"will_commit","","Determines if the transaction is currently set to commit or roll back.",31,null],[11,"set_commit","","Sets the transaction to commit at its completion.",31,null],[11,"set_rollback","","Sets the transaction to roll back at its completion.",31,null],[11,"commit","","A convenience method which consumes and commits a transaction.",31,null],[11,"finish","","Consumes the transaction, commiting or rolling it back as appropriate.",31,null],[0,"types","postgres","Traits dealing with Postgres data types",null,null],[6,"Oid","postgres::types","A Postgres OID.",null,null],[3,"SessionInfo","","A structure providing information for conversion methods.",null,null],[3,"Field","","Information about a field of a composite type.",null,null],[3,"Other","","Information about an unknown type.",null,null],[3,"WasNull","","An error indicating that a `NULL` Postgres value was passed to a `FromSql`\nimplementation that does not support `NULL` values.",null,null],[3,"WrongType","","An error indicating that a conversion was attempted between incompatible\nRust and Postgres types.",null,null],[4,"Type","","A Postgres type.",null,null],[13,"Bool","","BOOL - boolean, &amp;#39;true&amp;#39;/&amp;#39;false&amp;#39;",32,null],[13,"Bytea","","BYTEA - variable-length string, binary values escaped",32,null],[13,"Char","","CHAR - single character",32,null],[13,"Name","","NAME - 63-byte type for storing system identifiers",32,null],[13,"Int8","","INT8 - ~18 digit integer, 8-byte storage",32,null],[13,"Int2","","INT2 - -32 thousand to 32 thousand, 2-byte storage",32,null],[13,"Int2Vector","","INT2VECTOR - array of int2, used in system tables",32,null],[13,"Int4","","INT4 - -2 billion to 2 billion integer, 4-byte storage",32,null],[13,"Regproc","","REGPROC - registered procedure",32,null],[13,"Text","","TEXT - variable-length string, no limit specified",32,null],[13,"Oid","","OID - object identifier&amp;#40;oid&amp;#41;, maximum 4 billion",32,null],[13,"Tid","","TID - &amp;#40;block, offset&amp;#41;, physical location of tuple",32,null],[13,"Xid","","XID - transaction id",32,null],[13,"Cid","","CID - command identifier type, sequence in transaction id",32,null],[13,"OidVector","","OIDVECTOR - array of oids, used in system tables",32,null],[13,"PgDdlCommand","","PG_DDL_COMMAND - internal type for passing CollectedCommand",32,null],[13,"Json","","JSON",32,null],[13,"Xml","","XML - XML content",32,null],[13,"XmlArray","","XML&amp;#91;&amp;#93;",32,null],[13,"PgNodeTree","","PG_NODE_TREE - string representing an internal node tree",32,null],[13,"JsonArray","","JSON&amp;#91;&amp;#93;",32,null],[13,"Smgr","","SMGR - storage manager",32,null],[13,"IndexAmHandler","","INDEX_AM_HANDLER",32,null],[13,"Point","","POINT - geometric point &amp;#39;&amp;#40;x, y&amp;#41;&amp;#39;",32,null],[13,"Lseg","","LSEG - geometric line segment &amp;#39;&amp;#40;pt1,pt2&amp;#41;&amp;#39;",32,null],[13,"Path","","PATH - geometric path &amp;#39;&amp;#40;pt1,...&amp;#41;&amp;#39;",32,null],[13,"Box","","BOX - geometric box &amp;#39;&amp;#40;lower left,upper right&amp;#41;&amp;#39;",32,null],[13,"Polygon","","POLYGON - geometric polygon &amp;#39;&amp;#40;pt1,...&amp;#41;&amp;#39;",32,null],[13,"Line","","LINE - geometric line",32,null],[13,"LineArray","","LINE&amp;#91;&amp;#93;",32,null],[13,"Cidr","","CIDR - network IP address/netmask, network address",32,null],[13,"CidrArray","","CIDR&amp;#91;&amp;#93;",32,null],[13,"Float4","","FLOAT4 - single-precision floating point number, 4-byte storage",32,null],[13,"Float8","","FLOAT8 - double-precision floating point number, 8-byte storage",32,null],[13,"Abstime","","ABSTIME - absolute, limited-range date and time &amp;#40;Unix system time&amp;#41;",32,null],[13,"Reltime","","RELTIME - relative, limited-range time interval &amp;#40;Unix delta time&amp;#41;",32,null],[13,"Tinterval","","TINTERVAL - &amp;#40;abstime,abstime&amp;#41;, time interval",32,null],[13,"Unknown","","UNKNOWN",32,null],[13,"Circle","","CIRCLE - geometric circle &amp;#39;&amp;#40;center,radius&amp;#41;&amp;#39;",32,null],[13,"CircleArray","","CIRCLE&amp;#91;&amp;#93;",32,null],[13,"Money","","MONEY - monetary amounts, &amp;#36;d,ddd.cc",32,null],[13,"MoneyArray","","MONEY&amp;#91;&amp;#93;",32,null],[13,"Macaddr","","MACADDR - XX:XX:XX:XX:XX:XX, MAC address",32,null],[13,"Inet","","INET - IP address/netmask, host address, netmask optional",32,null],[13,"BoolArray","","BOOL&amp;#91;&amp;#93;",32,null],[13,"ByteaArray","","BYTEA&amp;#91;&amp;#93;",32,null],[13,"CharArray","","CHAR&amp;#91;&amp;#93;",32,null],[13,"NameArray","","NAME&amp;#91;&amp;#93;",32,null],[13,"Int2Array","","INT2&amp;#91;&amp;#93;",32,null],[13,"Int2VectorArray","","INT2VECTOR&amp;#91;&amp;#93;",32,null],[13,"Int4Array","","INT4&amp;#91;&amp;#93;",32,null],[13,"RegprocArray","","REGPROC&amp;#91;&amp;#93;",32,null],[13,"TextArray","","TEXT&amp;#91;&amp;#93;",32,null],[13,"TidArray","","TID&amp;#91;&amp;#93;",32,null],[13,"XidArray","","XID&amp;#91;&amp;#93;",32,null],[13,"CidArray","","CID&amp;#91;&amp;#93;",32,null],[13,"OidVectorArray","","OIDVECTOR&amp;#91;&amp;#93;",32,null],[13,"BpcharArray","","BPCHAR&amp;#91;&amp;#93;",32,null],[13,"VarcharArray","","VARCHAR&amp;#91;&amp;#93;",32,null],[13,"Int8Array","","INT8&amp;#91;&amp;#93;",32,null],[13,"PointArray","","POINT&amp;#91;&amp;#93;",32,null],[13,"LsegArray","","LSEG&amp;#91;&amp;#93;",32,null],[13,"PathArray","","PATH&amp;#91;&amp;#93;",32,null],[13,"BoxArray","","BOX&amp;#91;&amp;#93;",32,null],[13,"Float4Array","","FLOAT4&amp;#91;&amp;#93;",32,null],[13,"Float8Array","","FLOAT8&amp;#91;&amp;#93;",32,null],[13,"AbstimeArray","","ABSTIME&amp;#91;&amp;#93;",32,null],[13,"ReltimeArray","","RELTIME&amp;#91;&amp;#93;",32,null],[13,"TintervalArray","","TINTERVAL&amp;#91;&amp;#93;",32,null],[13,"PolygonArray","","POLYGON&amp;#91;&amp;#93;",32,null],[13,"OidArray","","OID&amp;#91;&amp;#93;",32,null],[13,"Aclitem","","ACLITEM - access control list",32,null],[13,"AclitemArray","","ACLITEM&amp;#91;&amp;#93;",32,null],[13,"MacaddrArray","","MACADDR&amp;#91;&amp;#93;",32,null],[13,"InetArray","","INET&amp;#91;&amp;#93;",32,null],[13,"Bpchar","","BPCHAR - char&amp;#40;length&amp;#41;, blank-padded string, fixed storage length",32,null],[13,"Varchar","","VARCHAR - varchar&amp;#40;length&amp;#41;, non-blank-padded string, variable storage length",32,null],[13,"Date","","DATE - date",32,null],[13,"Time","","TIME - time of day",32,null],[13,"Timestamp","","TIMESTAMP - date and time",32,null],[13,"TimestampArray","","TIMESTAMP&amp;#91;&amp;#93;",32,null],[13,"DateArray","","DATE&amp;#91;&amp;#93;",32,null],[13,"TimeArray","","TIME&amp;#91;&amp;#93;",32,null],[13,"Timestamptz","","TIMESTAMPTZ - date and time with time zone",32,null],[13,"TimestamptzArray","","TIMESTAMPTZ&amp;#91;&amp;#93;",32,null],[13,"Interval","","INTERVAL - &amp;#64; &amp;lt;number&amp;gt; &amp;lt;units&amp;gt;, time interval",32,null],[13,"IntervalArray","","INTERVAL&amp;#91;&amp;#93;",32,null],[13,"NumericArray","","NUMERIC&amp;#91;&amp;#93;",32,null],[13,"CstringArray","","CSTRING&amp;#91;&amp;#93;",32,null],[13,"Timetz","","TIMETZ - time of day with time zone",32,null],[13,"TimetzArray","","TIMETZ&amp;#91;&amp;#93;",32,null],[13,"Bit","","BIT - fixed-length bit string",32,null],[13,"BitArray","","BIT&amp;#91;&amp;#93;",32,null],[13,"Varbit","","VARBIT - variable-length bit string",32,null],[13,"VarbitArray","","VARBIT&amp;#91;&amp;#93;",32,null],[13,"Numeric","","NUMERIC - numeric&amp;#40;precision, decimal&amp;#41;, arbitrary precision number",32,null],[13,"Refcursor","","REFCURSOR - reference to cursor &amp;#40;portal name&amp;#41;",32,null],[13,"RefcursorArray","","REFCURSOR&amp;#91;&amp;#93;",32,null],[13,"Regprocedure","","REGPROCEDURE - registered procedure &amp;#40;with args&amp;#41;",32,null],[13,"Regoper","","REGOPER - registered operator",32,null],[13,"Regoperator","","REGOPERATOR - registered operator &amp;#40;with args&amp;#41;",32,null],[13,"Regclass","","REGCLASS - registered class",32,null],[13,"Regtype","","REGTYPE - registered type",32,null],[13,"RegprocedureArray","","REGPROCEDURE&amp;#91;&amp;#93;",32,null],[13,"RegoperArray","","REGOPER&amp;#91;&amp;#93;",32,null],[13,"RegoperatorArray","","REGOPERATOR&amp;#91;&amp;#93;",32,null],[13,"RegclassArray","","REGCLASS&amp;#91;&amp;#93;",32,null],[13,"RegtypeArray","","REGTYPE&amp;#91;&amp;#93;",32,null],[13,"Record","","RECORD",32,null],[13,"Cstring","","CSTRING",32,null],[13,"Any","","ANY",32,null],[13,"AnyArray","","ANYARRAY",32,null],[13,"Void","","VOID",32,null],[13,"Trigger","","TRIGGER",32,null],[13,"LanguageHandler","","LANGUAGE_HANDLER",32,null],[13,"Internal","","INTERNAL",32,null],[13,"Opaque","","OPAQUE",32,null],[13,"Anyelement","","ANYELEMENT",32,null],[13,"RecordArray","","RECORD&amp;#91;&amp;#93;",32,null],[13,"Anynonarray","","ANYNONARRAY",32,null],[13,"TxidSnapshotArray","","TXID_SNAPSHOT&amp;#91;&amp;#93;",32,null],[13,"Uuid","","UUID - UUID datatype",32,null],[13,"UuidArray","","UUID&amp;#91;&amp;#93;",32,null],[13,"TxidSnapshot","","TXID_SNAPSHOT - txid snapshot",32,null],[13,"FdwHandler","","FDW_HANDLER",32,null],[13,"PgLsn","","PG_LSN - PostgreSQL LSN datatype",32,null],[13,"PgLsnArray","","PG_LSN&amp;#91;&amp;#93;",32,null],[13,"TsmHandler","","TSM_HANDLER",32,null],[13,"Anyenum","","ANYENUM",32,null],[13,"TsVector","","TSVECTOR - text representation for text search",32,null],[13,"Tsquery","","TSQUERY - query representation for text search",32,null],[13,"GtsVector","","GTSVECTOR - GiST index internal text representation for text search",32,null],[13,"TsVectorArray","","TSVECTOR&amp;#91;&amp;#93;",32,null],[13,"GtsVectorArray","","GTSVECTOR&amp;#91;&amp;#93;",32,null],[13,"TsqueryArray","","TSQUERY&amp;#91;&amp;#93;",32,null],[13,"Regconfig","","REGCONFIG - registered text search configuration",32,null],[13,"RegconfigArray","","REGCONFIG&amp;#91;&amp;#93;",32,null],[13,"Regdictionary","","REGDICTIONARY - registered text search dictionary",32,null],[13,"RegdictionaryArray","","REGDICTIONARY&amp;#91;&amp;#93;",32,null],[13,"Jsonb","","JSONB - Binary JSON",32,null],[13,"JsonbArray","","JSONB&amp;#91;&amp;#93;",32,null],[13,"AnyRange","","ANYRANGE",32,null],[13,"EventTrigger","","EVENT_TRIGGER",32,null],[13,"Int4Range","","INT4RANGE - range of integers",32,null],[13,"Int4RangeArray","","INT4RANGE&amp;#91;&amp;#93;",32,null],[13,"NumRange","","NUMRANGE - range of numerics",32,null],[13,"NumRangeArray","","NUMRANGE&amp;#91;&amp;#93;",32,null],[13,"TsRange","","TSRANGE - range of timestamps without time zone",32,null],[13,"TsRangeArray","","TSRANGE&amp;#91;&amp;#93;",32,null],[13,"TstzRange","","TSTZRANGE - range of timestamps with time zone",32,null],[13,"TstzRangeArray","","TSTZRANGE&amp;#91;&amp;#93;",32,null],[13,"DateRange","","DATERANGE - range of dates",32,null],[13,"DateRangeArray","","DATERANGE&amp;#91;&amp;#93;",32,null],[13,"Int8Range","","INT8RANGE - range of bigints",32,null],[13,"Int8RangeArray","","INT8RANGE&amp;#91;&amp;#93;",32,null],[13,"Regnamespace","","REGNAMESPACE - registered namespace",32,null],[13,"RegnamespaceArray","","REGNAMESPACE&amp;#91;&amp;#93;",32,null],[13,"Regrole","","REGROLE - registered role",32,null],[13,"RegroleArray","","REGROLE&amp;#91;&amp;#93;",32,null],[13,"Other","","An unknown type.",32,null],[4,"Date","","A wrapper that can be used to represent infinity with `Type::Date` types.",null,null],[13,"PosInfinity","","Represents `infinity`, a date that is later than all other dates.",33,null],[13,"NegInfinity","","Represents `-infinity`, a date that is earlier than all other dates.",33,null],[13,"Value","","The wrapped date.",33,null],[4,"Timestamp","","A wrapper that can be used to represent infinity with `Type::Timestamp` and `Type::Timestamptz`\ntypes.",null,null],[13,"PosInfinity","","Represents `infinity`, a timestamp that is later than all other timestamps.",34,null],[13,"NegInfinity","","Represents `-infinity`, a timestamp that is earlier than all other timestamps.",34,null],[13,"Value","","The wrapped timestamp.",34,null],[4,"Kind","","Represents the kind of a Postgres type.",null,null],[13,"Simple","","A simple type like `VARCHAR` or `INTEGER`.",35,null],[13,"Enum","","An enumerated type along with its variants.",35,null],[13,"Pseudo","","A pseudo-type.",35,null],[13,"Array","","An array type along with the type of its elements.",35,null],[13,"Range","","A range type along with the type of its elements.",35,null],[13,"Domain","","A domain type along with its underlying type.",35,null],[13,"Composite","","A composite type along with information about its fields.",35,null],[4,"IsNull","","An enum representing the nullability of a Postgres value.",null,null],[13,"Yes","","The value is NULL.",36,null],[13,"No","","The value is not NULL.",36,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"from_sql","","",33,null],[11,"accepts","","",33,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",33,null],[11,"accepts","","",33,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",33,null],[11,"fmt","","",34,null],[11,"clone","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"from_sql","","",34,null],[11,"accepts","","",34,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql","","",34,null],[11,"accepts","","",34,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[11,"to_sql_checked","","",34,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"fmt","","",32,null],[11,"from_oid","","Returns the `Type` corresponding to the provided `Oid` if it\ncorresponds to a built-in type.",32,{"inputs":[{"name":"oid"}],"output":{"name":"option"}}],[11,"oid","","Returns the OID of the `Type`.",32,null],[11,"kind","","Returns the kind of this type.",32,null],[11,"schema","","Returns the schema of this type.",32,null],[11,"name","","Returns the name of this type.",32,null],[8,"FromSql","","A trait for types that can be created from a Postgres value.",null,null],[10,"from_sql","","Creates a new value of this type from a buffer of data of the specified\nPostgres `Type` in its binary format.",37,null],[11,"from_sql_null","","Creates a new value of this type from a `NULL` SQL value.",37,{"inputs":[{"name":"type"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[11,"from_sql_nullable","","A convenience function that delegates to `from_sql` and `from_sql_null` depending on the\nvalue of `raw`.",37,{"inputs":[{"name":"type"},{"name":"option"},{"name":"sessioninfo"}],"output":{"name":"result"}}],[10,"accepts","","Determines if a value of this type can be created from the specified\nPostgres `Type`.",37,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[8,"ToSql","","A trait for types that can be converted into Postgres values.",null,null],[10,"to_sql","","Converts the value of `self` into the binary format of the specified\nPostgres `Type`, appending it to `out`.",38,null],[10,"accepts","","Determines if a value of this type can be converted to the specified\nPostgres `Type`.",38,{"inputs":[{"name":"type"}],"output":{"name":"bool"}}],[10,"to_sql_checked","","An adaptor method used internally by Rust-Postgres.",38,null],[11,"fmt","","",39,null],[11,"parameter","","Returns the value of the specified Postgres backend parameter, such\nas `timezone` or `server_version`.",39,null],[11,"fmt","","",35,null],[11,"clone","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"fmt","","",40,null],[11,"clone","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"name","","Returns the name of the field.",40,null],[11,"type_","","Returns the type of the field.",40,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"name","","The name of the type.",41,null],[11,"oid","","The OID of this type.",41,null],[11,"kind","","The kind of this type.",41,null],[11,"schema","","The schema of this type.",41,null],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[11,"description","","",42,null],[11,"fmt","","",43,null],[11,"fmt","","",43,null],[11,"description","","",43,null],[6,"Result","postgres","A type alias of the result returned by many methods.",null,null],[8,"HandleNotice","","A trait implemented by types that can handle Postgres notice messages.",null,null],[10,"handle_notice","","Handle a Postgres notice message",44,null],[8,"GenericConnection","","A trait allowing abstraction over connections and transactions",null,null],[10,"execute","","Like `Connection::execute`.",45,null],[10,"query","","Like `Connection::query`.",45,null],[10,"prepare","","Like `Connection::prepare`.",45,null],[10,"prepare_cached","","Like `Connection::prepare_cached`.",45,null],[10,"transaction","","Like `Connection::transaction`.",45,null],[10,"batch_execute","","Like `Connection::batch_execute`.",45,null],[10,"is_active","","Like `Connection::is_active`.",45,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"handle_notice","","",46,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[11,"fmt","","",47,null],[11,"connect","","Creates a new connection to a Postgres database.",47,{"inputs":[{"name":"t"},{"name":"tlsmode"}],"output":{"name":"result"}}],[11,"execute","","Executes a statement, returning the number of rows modified.",47,null],[11,"query","","Executes a statement, returning the resulting rows.",47,null],[11,"transaction","","Begins a new transaction.",47,null],[11,"transaction_with","","Begins a new transaction with the specified configuration.",47,null],[11,"prepare","","Creates a new prepared statement.",47,null],[11,"prepare_cached","","Creates a cached prepared statement.",47,null],[11,"transaction_isolation","","Returns the isolation level which will be used for future transactions.",47,null],[11,"set_transaction_config","","Sets the configuration that will be used for future transactions.",47,null],[11,"batch_execute","","Execute a sequence of SQL statements.",47,null],[11,"notifications","","Returns a structure providing access to asynchronous notifications.",47,null],[11,"cancel_data","","Returns information used to cancel pending queries.",47,null],[11,"parameter","","Returns the value of the specified Postgres backend parameter, such as\n`timezone` or `server_version`.",47,null],[11,"set_notice_handler","","Sets the notice handler for the connection, returning the old handler.",47,null],[11,"is_desynchronized","","Returns whether or not the stream has been desynchronized due to an\nerror in the communication channel with the server.",47,null],[11,"is_active","","Determines if the `Connection` is currently &quot;active&quot;, that is, if there\nare no active transactions.",47,null],[11,"finish","","Consumes the connection, closing it.",47,null],[11,"execute","","",47,null],[11,"query","","",47,null],[11,"prepare","","",47,null],[11,"prepare_cached","","",47,null],[11,"transaction","","",47,null],[11,"batch_execute","","",47,null],[11,"is_active","","",47,null],[11,"execute","postgres::transaction","",31,null],[11,"query","","",31,null],[11,"prepare","","",31,null],[11,"prepare_cached","","",31,null],[11,"transaction","","",31,null],[11,"batch_execute","","",31,null],[11,"is_active","","",31,null],[14,"accepts","postgres","Generates a simple implementation of `ToSql::accepts` which accepts the\ntypes passed to it.",null,null],[14,"to_sql_checked","","Generates an implementation of `ToSql::to_sql_checked`.",null,null],[11,"fmt","postgres::tls","",48,null],[11,"read","","",48,null],[11,"write","","",48,null],[11,"flush","","",48,null],[11,"get_ref","","",48,null],[11,"get_mut","","",48,null],[11,"as_raw_fd","","",48,null]],"paths":[[3,"CancelData"],[4,"TlsMode"],[3,"DbError"],[4,"SqlState"],[4,"ConnectError"],[4,"ErrorPosition"],[4,"Error"],[8,"TlsStream"],[8,"TlsHandshake"],[3,"Notification"],[3,"Notifications"],[3,"Iter"],[3,"BlockingIter"],[3,"TimeoutIter"],[3,"UserInfo"],[3,"ConnectParams"],[4,"ConnectTarget"],[8,"IntoConnectParams"],[8,"RowIndex"],[3,"Rows"],[3,"Iter"],[3,"Row"],[3,"LazyRows"],[4,"Format"],[8,"ReadWithInfo"],[8,"WriteWithInfo"],[3,"Statement"],[3,"Column"],[3,"CopyInfo"],[4,"IsolationLevel"],[3,"Config"],[3,"Transaction"],[4,"Type"],[4,"Date"],[4,"Timestamp"],[4,"Kind"],[4,"IsNull"],[8,"FromSql"],[8,"ToSql"],[3,"SessionInfo"],[3,"Field"],[3,"Other"],[3,"WasNull"],[3,"WrongType"],[8,"HandleNotice"],[8,"GenericConnection"],[3,"LoggingNoticeHandler"],[3,"Connection"],[3,"Stream"]]};
searchIndex["chrono"] = {"doc":"# Chrono 0.2.25","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",0,null],[13,"Tue","","Tuesday.",0,null],[13,"Wed","","Wednesday.",0,null],[13,"Thu","","Thursday.",0,null],[13,"Fri","","Friday.",0,null],[13,"Sat","","Saturday.",0,null],[13,"Sun","","Sunday.",0,null],[0,"duration","","ISO 8601 duration.",null,null],[3,"Duration","chrono::duration","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[0,"offset","chrono","The time zone, which calculates offsets from the local time to UTC.",null,null],[4,"LocalResult","chrono::offset","The conversion result from the local time to the timezone-aware datetime types.",null,null],[13,"None","","Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.",1,null],[13,"Single","","Given local time representation has a single unique result.",1,null],[13,"Ambiguous","","Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.",1,null],[0,"utc","","The UTC (Coordinated Universal Time) time zone.",null,null],[3,"UTC","chrono::offset::utc","The UTC time zone. This is the most efficient time zone when you don&#39;t need the local time.\nIt is also used as an offset (which is also a dummy type).",null,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"today","","Returns a `Date` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",2,{"inputs":[{"name":"utc"}],"output":{"name":"utc"}}],[11,"offset_from_local_date","","",2,null],[11,"offset_from_local_datetime","","",2,null],[11,"offset_from_utc_date","","",2,null],[11,"offset_from_utc_datetime","","",2,null],[11,"local_minus_utc","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[0,"fixed","chrono::offset","The time zone which has a fixed offset from UTC.",null,null],[3,"FixedOffset","chrono::offset::fixed","The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.",null,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_offset","","",3,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_local_date","","",3,null],[11,"offset_from_local_datetime","","",3,null],[11,"offset_from_utc_date","","",3,null],[11,"offset_from_utc_datetime","","",3,null],[11,"local_minus_utc","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[0,"local","chrono::offset","The local (system) time zone.",null,null],[3,"Local","chrono::offset::local","The local timescale. This is implemented via the standard `time` crate.",null,null],[11,"clone","","",4,null],[11,"today","","Returns a `Date` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",4,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"local"}}],[11,"offset_from_local_date","","",4,null],[11,"offset_from_local_datetime","","",4,null],[11,"offset_from_utc_date","","",4,null],[11,"offset_from_utc_datetime","","",4,null],[11,"from_local_date","","",4,null],[11,"from_local_datetime","","",4,null],[11,"from_utc_date","","",4,null],[11,"from_utc_datetime","","",4,null],[8,"Offset","chrono::offset","The offset from the local time to UTC.",null,null],[10,"local_minus_utc","","Returns the offset from UTC to the local time stored.",5,null],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.",6,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"yo","","Makes a new `Date` from year, day of year (DOY or &quot;ordinal&quot;) and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or &quot;ordinal&quot;) and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",6,null],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",6,null],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",6,null],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",6,null],[11,"datetime_from_str","","Parses a string with the specified format string and\nreturns a `DateTime` with the current offset.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",6,null],[10,"from_offset","","Reconstructs the time zone from the offset.",6,{"inputs":[{"name":"offset"}],"output":{"name":"self"}}],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if possible.",6,null],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if possible.",6,null],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware `Date` if possible.",6,null],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.",6,null],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot fail.",6,null],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This cannot fail.",6,null],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,null],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"single","","Returns `Some` only when the conversion result is unique, or `None` otherwise.",1,null],[11,"earliest","","Returns `Some` for the earliest possible conversion result, or `None` if none.",1,null],[11,"latest","","Returns `Some` for the latest possible conversion result, or `None` if none.",1,null],[11,"map","","Maps a `LocalResult&lt;T&gt;` into `LocalResult&lt;U&gt;` with given function.",1,null],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"unwrap","","Returns the single unique conversion result, or panics accordingly.",1,null],[0,"naive","chrono","Date and time types which do not concern about the timezones.",null,null],[0,"date","chrono::naive","ISO 8601 calendar date without timezone.",null,null],[3,"NaiveDate","chrono::naive::date","ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date](./index.html#calendar-date)\nfrom Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.",null,null],[17,"MIN","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"clone","","",7,null],[11,"from_ymd","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_yo","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_yo_opt","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_isoywd","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"naivedate"}}],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"option"}}],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"naivedate"}}],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",7,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",7,null],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,null],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,null],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,null],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,null],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,null],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,null],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,null],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,null],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",7,null],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",7,null],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",7,null],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",7,null],[11,"checked_add","","Adds the `days` part of given `Duration` to the current date.",7,null],[11,"checked_sub","","Subtracts the `days` part of given `Duration` from the current date.",7,null],[11,"format_with_items","","Formats the date with the specified formatting items.\nOtherwise it is same to the ordinary `format` method.",7,null],[11,"format","","Formats the date with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",7,null],[11,"year","","Returns the year number in the [calendar date](./index.html#calendar-date).",7,null],[11,"month","","Returns the month number starting from 1.",7,null],[11,"month0","","Returns the month number starting from 0.",7,null],[11,"day","","Returns the day of month starting from 1.",7,null],[11,"day0","","Returns the day of month starting from 0.",7,null],[11,"ordinal","","Returns the day of year starting from 1.",7,null],[11,"ordinal0","","Returns the day of year starting from 0.",7,null],[11,"weekday","","Returns the day of week.",7,null],[11,"isoweekdate","","",7,null],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",7,null],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting from 1) changed.",7,null],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting from 0) changed.",7,null],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting from 1) changed.",7,null],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting from 0) changed.",7,null],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting from 1) changed.",7,null],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting from 0) changed.",7,null],[11,"hash","","",7,null],[11,"add","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"time","chrono::naive","ISO 8601 time without timezone.",null,null],[3,"NaiveTime","chrono::naive::time","ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.",null,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"cmp","","",8,null],[11,"clone","","",8,null],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",8,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"format_with_items","","Formats the time with the specified formatting items.\nOtherwise it is same to the ordinary [`format`](#method.format) method.",8,null],[11,"format","","Formats the time with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",8,null],[11,"hour","","Returns the hour number from 0 to 23.",8,null],[11,"minute","","Returns the minute number from 0 to 59.",8,null],[11,"second","","Returns the second number from 0 to 59.",8,null],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",8,null],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",8,null],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",8,null],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",8,null],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.",8,null],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",8,null],[11,"hash","","",8,null],[11,"add","","",8,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"datetime","chrono::naive","ISO 8601 date and time without timezone.",null,null],[3,"NaiveDateTime","chrono::naive::datetime","ISO 8601 combined date and time without timezone.",null,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"cmp","","",9,null],[11,"clone","","",9,null],[11,"new","","Makes a new `NaiveDateTime` from date and time components.\nEquivalent to `date.and_time(time)` and many other helper constructors on `NaiveDate`.",9,{"inputs":[{"name":"naivedate"},{"name":"naivetime"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_unix_epoch","","*Deprecated:* Same to [`NaiveDateTime::from_timestamp`](#method.from_timestamp).",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_num_seconds_from_unix_epoch_opt","","*Deprecated:* Same to [`NaiveDateTime::from_timestamp_opt`](#method.from_timestamp_opt).",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDateTime`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",9,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"date","","Retrieves a date component.",9,null],[11,"time","","Retrieves a time component.",9,null],[11,"timestamp","","Returns the number of non-leap seconds since the midnight on January 1, 1970.",9,null],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole non-leap second.",9,null],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole non-leap second.",9,null],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole non-leap second.",9,null],[11,"num_seconds_from_unix_epoch","","*Deprecated:* Same to [`NaiveDateTime::timestamp`](#method.timestamp).",9,null],[11,"checked_add","","Adds given `Duration` to the current date and time.",9,null],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",9,null],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",9,null],[11,"format","","Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",9,null],[11,"year","","Returns the year number in the [calendar date](./index.html#calendar-date).",9,null],[11,"month","","Returns the month number starting from 1.",9,null],[11,"month0","","Returns the month number starting from 0.",9,null],[11,"day","","Returns the day of month starting from 1.",9,null],[11,"day0","","Returns the day of month starting from 0.",9,null],[11,"ordinal","","Returns the day of year starting from 1.",9,null],[11,"ordinal0","","Returns the day of year starting from 0.",9,null],[11,"weekday","","Returns the day of week.",9,null],[11,"isoweekdate","","",9,null],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",9,null],[11,"with_month","","Makes a new `NaiveDateTime` with the month number (starting from 1) changed.",9,null],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number (starting from 0) changed.",9,null],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.",9,null],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.",9,null],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.",9,null],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.",9,null],[11,"hour","","Returns the hour number from 0 to 23.",9,null],[11,"minute","","Returns the minute number from 0 to 59.",9,null],[11,"second","","Returns the second number from 0 to 59.",9,null],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",9,null],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",9,null],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",9,null],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",9,null],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.",9,null],[11,"hash","","",9,null],[11,"add","","",9,null],[11,"sub","","",9,null],[11,"sub","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"date","chrono","ISO 8601 calendar date with time zone.",null,null],[3,"Date","chrono::date","ISO 8601 calendar date with time zone.",null,null],[17,"MIN","","The minimum possible `Date`.",null,null],[17,"MAX","","The maximum possible `Date`.",null,null],[11,"clone","","",10,null],[11,"from_utc","","Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.",10,{"inputs":[{"name":"naivedate"},{"name":"offset"}],"output":{"name":"date"}}],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",10,null],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"succ","","Makes a new `Date` for the next date.",10,null],[11,"succ_opt","","Makes a new `Date` for the next date.",10,null],[11,"pred","","Makes a new `Date` for the prior date.",10,null],[11,"pred_opt","","Makes a new `Date` for the prior date.",10,null],[11,"offset","","Retrieves an associated offset from UTC.",10,null],[11,"timezone","","Retrieves an associated time zone.",10,null],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).",10,null],[11,"checked_add","","Adds given `Duration` to the current date.",10,null],[11,"checked_sub","","Subtracts given `Duration` from the current date.",10,null],[11,"naive_utc","","Returns a view to the naive UTC date.",10,null],[11,"naive_local","","Returns a view to the naive local date.",10,null],[11,"format_with_items","","Formats the date with the specified formatting items.",10,null],[11,"format","","Formats the date with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",10,null],[11,"year","","",10,null],[11,"month","","",10,null],[11,"month0","","",10,null],[11,"day","","",10,null],[11,"day0","","",10,null],[11,"ordinal","","",10,null],[11,"ordinal0","","",10,null],[11,"weekday","","",10,null],[11,"isoweekdate","","",10,null],[11,"with_year","","",10,null],[11,"with_month","","",10,null],[11,"with_month0","","",10,null],[11,"with_day","","",10,null],[11,"with_day0","","",10,null],[11,"with_ordinal","","",10,null],[11,"with_ordinal0","","",10,null],[11,"eq","","",10,null],[11,"partial_cmp","","",10,null],[11,"cmp","","",10,null],[11,"hash","","",10,null],[11,"add","","",10,null],[11,"sub","","",10,null],[11,"sub","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[0,"datetime","chrono","ISO 8601 date and time with time zone.",null,null],[3,"DateTime","chrono::datetime","ISO 8601 combined date and time with time zone.",null,null],[11,"clone","","",11,null],[11,"from_utc","","Makes a new `DateTime` with given *UTC* datetime and offset.\nThe local datetime should be constructed via the `TimeZone` trait.",11,{"inputs":[{"name":"naivedatetime"},{"name":"offset"}],"output":{"name":"datetime"}}],[11,"date","","Retrieves a date component.",11,null],[11,"time","","Retrieves a time component.\nUnlike `date`, this is not associated to the time zone.",11,null],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka &quot;UNIX timestamp&quot;).",11,null],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second boundary",11,null],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second boundary",11,null],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second boundary",11,null],[11,"num_seconds_from_unix_epoch","","*Deprecated*: Same to `DateTime::timestamp`.",11,null],[11,"offset","","Retrieves an associated offset from UTC.",11,null],[11,"timezone","","Retrieves an associated time zone.",11,null],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `DateTime` (but will change the string representation).",11,null],[11,"checked_add","","Adds given `Duration` to the current date and time.",11,null],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",11,null],[11,"naive_utc","","Returns a view to the naive UTC datetime.",11,null],[11,"naive_local","","Returns a view to the naive local datetime.",11,null],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_str","","Parses a string with the specified format string and\nreturns a new `DateTime` with a parsed `FixedOffset`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",11,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.",11,null],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.",11,null],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",11,null],[11,"format","","Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",11,null],[11,"year","","",11,null],[11,"month","","",11,null],[11,"month0","","",11,null],[11,"day","","",11,null],[11,"day0","","",11,null],[11,"ordinal","","",11,null],[11,"ordinal0","","",11,null],[11,"weekday","","",11,null],[11,"isoweekdate","","",11,null],[11,"with_year","","",11,null],[11,"with_month","","",11,null],[11,"with_month0","","",11,null],[11,"with_day","","",11,null],[11,"with_day0","","",11,null],[11,"with_ordinal","","",11,null],[11,"with_ordinal0","","",11,null],[11,"hour","","",11,null],[11,"minute","","",11,null],[11,"second","","",11,null],[11,"nanosecond","","",11,null],[11,"with_hour","","",11,null],[11,"with_minute","","",11,null],[11,"with_second","","",11,null],[11,"with_nanosecond","","",11,null],[11,"eq","","",11,null],[11,"partial_cmp","","",11,null],[11,"cmp","","",11,null],[11,"hash","","",11,null],[11,"add","","",11,null],[11,"sub","","",11,null],[11,"sub","","",11,null],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"format","chrono","Formatting utilities for date and time.",null,null],[3,"ParseError","chrono::format","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",12,null],[13,"Zero","","Zero (`0`) padding.",12,null],[13,"Space","","Space padding.",12,null],[4,"Numeric","","Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.",13,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.",13,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"Month","","Month (FW=PW=2).",13,null],[13,"Day","","Day of the month (FW=PW=2).",13,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).",13,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday of January (FW=PW=2).",13,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",13,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).",13,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",13,null],[13,"Ordinal","","Day of the year (FW=PW=3).",13,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",13,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",13,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",13,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",13,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).",13,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.",13,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",14,null],[13,"LongMonthName","","Full month names.",14,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",14,null],[13,"LongWeekdayName","","Full day of the week names.",14,null],[13,"LowerAmPm","","AM/PM.",14,null],[13,"UpperAmPm","","AM/PM.",14,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).",14,null],[13,"Nanosecond3","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.",14,null],[13,"Nanosecond6","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.",14,null],[13,"Nanosecond9","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.",14,null],[13,"TimezoneName","","Timezone name.",14,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).",14,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).",14,null],[13,"TimezoneOffset","","Same to [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.",14,null],[13,"TimezoneOffsetZ","","Same to [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.",14,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and MIME date and time.",14,null],[13,"RFC3339","","RFC 3339 &amp; ISO 8601 date and time syntax.",14,null],[4,"Item","","A single formatting item. This is used for both formatting and parsing.",null,null],[13,"Literal","","A literally printed and parsed text.",15,null],[13,"Space","","Whitespace. Prints literally but reads zero or more whitespace.",15,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.",15,null],[13,"Fixed","","Fixed-format item.",15,null],[13,"Error","","Issues a formatting error. Used to signal an invalid format string.",15,null],[5,"parse","","Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.",null,{"inputs":[{"name":"parsed"},{"name":"str"},{"name":"i"}],"output":{"name":"parseresult"}}],[5,"format","","Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.",null,{"inputs":[{"name":"formatter"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"result"}}],[0,"parsed","","A collection of parsed date and time items.\nThey can be constructed incrementally while being checked for consistency.",null,null],[3,"Parsed","chrono::format::parsed","Parsed parts of date and time. There are two classes of methods:",null,null],[12,"year","","Year.",16,null],[12,"year_div_100","","Year divided by 100. Implies that the year is &gt;= 1 BCE when set.",16,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is &gt;= 1 BCE when set.",16,null],[12,"isoyear","","Year in the [ISO week date](../../naive/date/index.html#week-date).",16,null],[12,"isoyear_div_100","","Year in the [ISO week date](../../naive/date/index.html#week-date), divided by 100.\nImplies that the year is &gt;= 1 BCE when set.",16,null],[12,"isoyear_mod_100","","Year in the [ISO week date](../../naive/date/index.html#week-date), modulo 100.\nImplies that the year is &gt;= 1 BCE when set.",16,null],[12,"month","","Month (1--12).",16,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"isoweek","","[ISO week number](../../naive/date/index.html#week-date)\n(1--52 or 1--53 depending on the year).",16,null],[12,"weekday","","Day of the week.",16,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",16,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).",16,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.",16,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",16,null],[12,"minute","","Minute number (0--59).",16,null],[12,"second","","Second number (0--60, accounting for leap seconds).",16,null],[12,"nanosecond","","The number of nanoseconds since the whole second (0--999,999,999).",16,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970.",16,null],[12,"offset","","Offset from the local time to UTC, in seconds.",16,null],[11,"clone","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"fmt","","",16,null],[11,"new","","Returns the initial value of parsed parts.",16,{"inputs":[],"output":{"name":"parsed"}}],[11,"set_year","","Tries to set the [`year`](#structfield.year) field from given value.",16,null],[11,"set_year_div_100","","Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.",16,null],[11,"set_year_mod_100","","Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.",16,null],[11,"set_isoyear","","Tries to set the [`isoyear`](#structfield.isoyear) field from given value.",16,null],[11,"set_isoyear_div_100","","Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.",16,null],[11,"set_isoyear_mod_100","","Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.",16,null],[11,"set_month","","Tries to set the [`month`](#structfield.month) field from given value.",16,null],[11,"set_week_from_sun","","Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.",16,null],[11,"set_week_from_mon","","Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.",16,null],[11,"set_isoweek","","Tries to set the [`isoweek`](#structfield.isoweek) field from given value.",16,null],[11,"set_weekday","","Tries to set the [`weekday`](#structfield.weekday) field from given value.",16,null],[11,"set_ordinal","","Tries to set the [`ordinal`](#structfield.ordinal) field from given value.",16,null],[11,"set_day","","Tries to set the [`day`](#structfield.day) field from given value.",16,null],[11,"set_ampm","","Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n(`false` for AM, `true` for PM)",16,null],[11,"set_hour12","","Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\ngiven hour number in 12-hour clocks.",16,null],[11,"set_hour","","Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n[`hour_mod_12`](#structfield.hour_mod_12) fields from given value.",16,null],[11,"set_minute","","Tries to set the [`minute`](#structfield.minute) field from given value.",16,null],[11,"set_second","","Tries to set the [`second`](#structfield.second) field from given value.",16,null],[11,"set_nanosecond","","Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.",16,null],[11,"set_timestamp","","Tries to set the [`timestamp`](#structfield.timestamp) field from given value.",16,null],[11,"set_offset","","Tries to set the [`offset`](#structfield.offset) field from given value.",16,null],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",16,null],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",16,null],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,\nexcept for the [`offset`](#structfield.offset) field (assumed to have a given value).\nThis is required for parsing a local time or other known-timezone inputs.",16,null],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",16,null],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given fields.",16,null],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given fields,\nwith an additional `TimeZone` used to interpret and validate the local date.",16,null],[0,"strftime","chrono::format","`strftime`/`strptime`-inspired date and time formatting syntax.",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"clone","","",17,null],[11,"new","","Creates a new parsing iterator from the `strftime`-like format string.",17,{"inputs":[{"name":"str"}],"output":{"name":"strftimeitems"}}],[11,"next","","",17,null],[6,"ParseResult","chrono::format","Same to `Result&lt;T, ParseError&gt;`.",null,null],[11,"clone","","",12,null],[11,"eq","","",12,null],[11,"fmt","","",12,null],[11,"clone","","",13,null],[11,"eq","","",13,null],[11,"fmt","","",13,null],[11,"clone","","",14,null],[11,"eq","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"fmt","","",15,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"description","","",18,null],[11,"fmt","","",19,null],[11,"new","","Makes a new `DelayedFormat` value out of local date and time.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and time and UTC offset.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"off"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"fmt","","",19,null],[8,"Datelike","chrono","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the [calendar date](./naive/date/index.html#calendar-date).",20,null],[11,"year_ce","","Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).",20,null],[10,"month","","Returns the month number starting from 1.",20,null],[10,"month0","","Returns the month number starting from 0.",20,null],[10,"day","","Returns the day of month starting from 1.",20,null],[10,"day0","","Returns the day of month starting from 0.",20,null],[10,"ordinal","","Returns the day of year starting from 1.",20,null],[10,"ordinal0","","Returns the day of year starting from 0.",20,null],[10,"weekday","","Returns the day of week.",20,null],[10,"isoweekdate","","Returns the ISO week date: an adjusted year, week number and day of week.\nThe adjusted year may differ from that of the calendar date.",20,null],[10,"with_year","","Makes a new value with the year number changed.",20,null],[10,"with_month","","Makes a new value with the month number (starting from 1) changed.",20,null],[10,"with_month0","","Makes a new value with the month number (starting from 0) changed.",20,null],[10,"with_day","","Makes a new value with the day of month (starting from 1) changed.",20,null],[10,"with_day0","","Makes a new value with the day of month (starting from 0) changed.",20,null],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1) changed.",20,null],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0) changed.",20,null],[11,"num_days_from_ce","","Returns the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",20,null],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",21,null],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.",21,null],[10,"minute","","Returns the minute number from 0 to 59.",21,null],[10,"second","","Returns the second number from 0 to 59.",21,null],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",21,null],[10,"with_hour","","Makes a new value with the hour number changed.",21,null],[10,"with_minute","","Makes a new value with the minute number changed.",21,null],[10,"with_second","","Makes a new value with the second number changed.",21,null],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole non-leap second changed.",21,null],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",21,null],[11,"eq","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"succ","","The next day in the week.",0,null],[11,"pred","","The previous day in the week.",0,null],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)",0,null],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",0,null],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",0,null],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",0,null],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"weeks","chrono::duration","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",22,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",22,null],[11,"num_days","","Returns the total number of whole days in the duration.",22,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",22,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",22,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",22,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",22,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",22,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",22,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",22,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",22,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",22,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",22,{"inputs":[{"name":"duration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",22,null],[11,"sub","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"div","","",22,null],[11,"add","","",22,null],[11,"neg","","",22,null],[11,"mul","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"partial_cmp","","",22,null],[11,"lt","","",22,null],[11,"le","","",22,null],[11,"gt","","",22,null],[11,"ge","","",22,null],[11,"cmp","","",22,null]],"paths":[[4,"Weekday"],[4,"LocalResult"],[3,"UTC"],[3,"FixedOffset"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"Parsed"],[3,"StrftimeItems"],[3,"ParseError"],[3,"DelayedFormat"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"]]};
searchIndex["phf"] = {"doc":"Compile time optimized maps and sets.","items":[[8,"PhfHash","phf","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,null],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null],[3,"Map","","An immutable map constructed at compile time.",null,null],[3,"Set","","An immutable set constructed at compile time.",null,null],[3,"OrderedMap","","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedSet","","An order-preserving immutable set constructed at compile time.",null,null],[0,"map","","An immutable map constructed at compile time.",null,null],[3,"Map","phf::map","An immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the key/value pairs in a `Map`.",null,null],[3,"Keys","","An iterator over the keys in a `Map`.",null,null],[3,"Values","","An iterator over the values in a `Map`.",null,null],[11,"fmt","","",1,null],[11,"index","","",1,null],[11,"is_empty","","Returns true if the `Map` is empty.",1,null],[11,"len","","Returns the number of entries in the `Map`.",1,null],[11,"contains_key","","Determines if `key` is in the `Map`.",1,null],[11,"get","","Returns a reference to the value that `key` maps to.",1,null],[11,"get_key","","Returns a reference to the map&#39;s internal static instance of the given\nkey.",1,null],[11,"get_entry","","Like `get`, but returns both the key and the value.",1,null],[11,"entries","","Returns an iterator over the key/value pairs in the map.",1,null],[11,"keys","","Returns an iterator over the keys in the map.",1,null],[11,"values","","Returns an iterator over the values in the map.",1,null],[11,"next","","",2,null],[11,"size_hint","","",2,null],[11,"next_back","","",2,null],[11,"next","","",3,null],[11,"size_hint","","",3,null],[11,"next_back","","",3,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[0,"set","phf","An immutable set constructed at compile time.",null,null],[3,"Set","phf::set","An immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `Set`.",null,null],[11,"fmt","","",5,null],[11,"len","","Returns the number of elements in the `Set`.",5,null],[11,"is_empty","","Returns true if the `Set` contains no elements.",5,null],[11,"get_key","","Returns a reference to the set&#39;s internal static instance of the given\nkey.",5,null],[11,"contains","","Returns true if `value` is in the `Set`.",5,null],[11,"iter","","Returns an iterator over the values in the set.",5,null],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",5,null],[11,"is_subset","","Returns true if `other` contains all values in `self`.",5,null],[11,"is_superset","","Returns true if `self` contains all values in `other`.",5,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"next_back","","",6,null],[0,"ordered_map","phf","An order-preserving immutable map constructed at compile time.",null,null],[3,"OrderedMap","phf::ordered_map","An order-preserving immutable map constructed at compile time.",null,null],[3,"Entries","","An iterator over the entries in a `OrderedMap`.",null,null],[3,"Keys","","An iterator over the keys in a `OrderedMap`.",null,null],[3,"Values","","An iterator over the values in a `OrderedMap`.",null,null],[11,"fmt","","",7,null],[11,"index","","",7,null],[11,"len","","Returns the number of entries in the `Map`.",7,null],[11,"is_empty","","Returns true if the `Map` is empty.",7,null],[11,"get","","Returns a reference to the value that `key` maps to.",7,null],[11,"get_key","","Returns a reference to the map&#39;s internal static instance of the given\nkey.",7,null],[11,"contains_key","","Determines if `key` is in the `Map`.",7,null],[11,"get_index","","Returns the index of the key within the list used to initialize\nthe ordered map.",7,null],[11,"index","","Returns references to both the key and values at an index\nwithin the list used to initialize the ordered map. See `.get_index(key)`.",7,null],[11,"get_entry","","Like `get`, but returns both the key and the value.",7,null],[11,"entries","","Returns an iterator over the key/value pairs in the map.",7,null],[11,"keys","","Returns an iterator over the keys in the map.",7,null],[11,"values","","Returns an iterator over the values in the map.",7,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"next_back","","",8,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[0,"ordered_set","phf","An order-preserving immutable set constructed at compile time.",null,null],[3,"OrderedSet","phf::ordered_set","An order-preserving immutable set constructed at compile time.",null,null],[3,"Iter","","An iterator over the values in a `OrderedSet`.",null,null],[11,"fmt","","",11,null],[11,"len","","Returns the number of elements in the `OrderedSet`.",11,null],[11,"is_empty","","Returns true if the `OrderedSet` contains no elements.",11,null],[11,"get_key","","Returns a reference to the set&#39;s internal static instance of the given\nkey.",11,null],[11,"get_index","","Returns the index of the key within the list used to initialize\nthe ordered set.",11,null],[11,"index","","Returns a reference to the key at an index\nwithin the list used to initialize the ordered set. See `.get_index(key)`.",11,null],[11,"contains","","Returns true if `value` is in the `Set`.",11,null],[11,"iter","","Returns an iterator over the values in the set.",11,null],[11,"is_disjoint","","Returns true if `other` shares no elements with `self`.",11,null],[11,"is_subset","","Returns true if `other` contains all values in `self`.",11,null],[11,"is_superset","","Returns true if `self` contains all values in `other`.",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next_back","","",12,null]],"paths":[[8,"PhfHash"],[3,"Map"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"Set"],[3,"Iter"],[3,"OrderedMap"],[3,"Entries"],[3,"Keys"],[3,"Values"],[3,"OrderedSet"],[3,"Iter"]]};
searchIndex["postgres_protocol"] = {"doc":"Low level Postgres protocol APIs.","items":[[4,"IsNull","postgres_protocol","An enum indicating if a value is `NULL` or not.",null,null],[13,"Yes","","The value is `NULL`.",0,null],[13,"No","","The value is not `NULL`.",0,null],[0,"authentication","","Authentication protocol support.",null,null],[5,"md5_hash","postgres_protocol::authentication","Hashes authentication information in a way suitable for use in response\nto an `AuthenticationMd5Password` message.",null,null],[0,"message","postgres_protocol","Postgres message protocol support.",null,null],[0,"backend","postgres_protocol::message","Backend message deserialization.",null,null],[3,"RowDescriptionEntry","postgres_protocol::message::backend","",null,null],[12,"name","","",1,null],[12,"table_oid","","",1,null],[12,"column_id","","",1,null],[12,"type_oid","","",1,null],[12,"type_size","","",1,null],[12,"type_modifier","","",1,null],[12,"format","","",1,null],[4,"Message","","An enum representing Postgres backend messages.",null,null],[13,"AuthenticationCleartextPassword","","",2,null],[13,"AuthenticationGSS","","",2,null],[13,"AuthenticationKerberosV5","","",2,null],[13,"AuthenticationMD5Password","","",2,null],[12,"salt","postgres_protocol::message::backend::Message","",2,null],[13,"AuthenticationOk","postgres_protocol::message::backend","",2,null],[13,"AuthenticationSCMCredential","","",2,null],[13,"AuthenticationSSPI","","",2,null],[13,"BackendKeyData","","",2,null],[12,"process_id","postgres_protocol::message::backend::Message","",2,null],[12,"secret_key","","",2,null],[13,"BindComplete","postgres_protocol::message::backend","",2,null],[13,"CloseComplete","","",2,null],[13,"CommandComplete","","",2,null],[12,"tag","postgres_protocol::message::backend::Message","",2,null],[13,"CopyData","postgres_protocol::message::backend","",2,null],[12,"data","postgres_protocol::message::backend::Message","",2,null],[13,"CopyDone","postgres_protocol::message::backend","",2,null],[13,"CopyInResponse","","",2,null],[12,"format","postgres_protocol::message::backend::Message","",2,null],[12,"column_formats","","",2,null],[13,"CopyOutResponse","postgres_protocol::message::backend","",2,null],[12,"format","postgres_protocol::message::backend::Message","",2,null],[12,"column_formats","","",2,null],[13,"DataRow","postgres_protocol::message::backend","",2,null],[12,"row","postgres_protocol::message::backend::Message","",2,null],[13,"EmptyQueryResponse","postgres_protocol::message::backend","",2,null],[13,"ErrorResponse","","",2,null],[12,"fields","postgres_protocol::message::backend::Message","",2,null],[13,"NoData","postgres_protocol::message::backend","",2,null],[13,"NoticeResponse","","",2,null],[12,"fields","postgres_protocol::message::backend::Message","",2,null],[13,"NotificationResponse","postgres_protocol::message::backend","",2,null],[12,"process_id","postgres_protocol::message::backend::Message","",2,null],[12,"channel","","",2,null],[12,"payload","","",2,null],[13,"ParameterDescription","postgres_protocol::message::backend","",2,null],[12,"types","postgres_protocol::message::backend::Message","",2,null],[13,"ParameterStatus","postgres_protocol::message::backend","",2,null],[12,"parameter","postgres_protocol::message::backend::Message","",2,null],[12,"value","","",2,null],[13,"ParseComplete","postgres_protocol::message::backend","",2,null],[13,"PortalSuspended","","",2,null],[13,"ReadyForQuery","","",2,null],[12,"state","postgres_protocol::message::backend::Message","",2,null],[13,"RowDescription","postgres_protocol::message::backend","",2,null],[12,"descriptions","postgres_protocol::message::backend::Message","",2,null],[4,"ParseResult","postgres_protocol::message::backend","The result of an attempted parse.",null,null],[13,"Complete","","A message was successfully parsed.",3,null],[12,"message","postgres_protocol::message::backend::ParseResult","The message.",3,null],[12,"consumed","","The number of bytes of the input buffer consumed to parse this message.",3,null],[13,"Incomplete","postgres_protocol::message::backend","The buffer did not contain a full message.",3,null],[12,"required_size","postgres_protocol::message::backend::ParseResult","The number of total bytes required to parse a message, if known.",3,null],[0,"borrowed","postgres_protocol::message::backend","An allocation-free backend message parser.",null,null],[3,"AuthenticationMd5PasswordBody","postgres_protocol::message::backend::borrowed","",null,null],[3,"BackendKeyDataBody","","",null,null],[3,"CommandCompleteBody","","",null,null],[3,"CopyDataBody","","",null,null],[3,"CopyInResponseBody","","",null,null],[3,"ColumnFormats","","",null,null],[3,"CopyOutResponseBody","","",null,null],[3,"DataRowBody","","",null,null],[3,"DataRowValues","","",null,null],[3,"ErrorResponseBody","","",null,null],[3,"ErrorFields","","",null,null],[3,"ErrorField","","",null,null],[3,"NoticeResponseBody","","",null,null],[3,"NotificationResponseBody","","",null,null],[3,"ParameterDescriptionBody","","",null,null],[3,"Parameters","","",null,null],[3,"ParameterStatusBody","","",null,null],[3,"ReadyForQueryBody","","",null,null],[3,"RowDescriptionBody","","",null,null],[3,"Fields","","",null,null],[3,"Field","","",null,null],[4,"Message","","An enum representing Postgres backend messages.",null,null],[13,"AuthenticationCleartextPassword","","",4,null],[13,"AuthenticationGss","","",4,null],[13,"AuthenticationKerberosV5","","",4,null],[13,"AuthenticationMd55Password","","",4,null],[13,"AuthenticationOk","","",4,null],[13,"AuthenticationScmCredential","","",4,null],[13,"AuthenticationSspi","","",4,null],[13,"BackendKeyData","","",4,null],[13,"BindComplete","","",4,null],[13,"CloseComplete","","",4,null],[13,"CommandComplete","","",4,null],[13,"CopyData","","",4,null],[13,"CopyDone","","",4,null],[13,"CopyInResponse","","",4,null],[13,"CopyOutResponse","","",4,null],[13,"DataRow","","",4,null],[13,"EmptyQueryResponse","","",4,null],[13,"ErrorResponse","","",4,null],[13,"NoData","","",4,null],[13,"NoticeResponse","","",4,null],[13,"NotificationResponse","","",4,null],[13,"ParameterDescription","","",4,null],[13,"ParameterStatus","","",4,null],[13,"ParseComplete","","",4,null],[13,"PortalSuspended","","",4,null],[13,"ReadyForQuery","","",4,null],[13,"RowDescription","","",4,null],[11,"parse","","Attempts to deserialize a backend message from the buffer.",4,null],[11,"to_owned","","Converts this message into an owned representation.",4,null],[11,"salt","","",5,null],[11,"process_id","","",6,null],[11,"secret_key","","",6,null],[11,"tag","","",7,null],[11,"data","","",8,null],[11,"format","","",9,null],[11,"column_formats","","",9,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"format","","",11,null],[11,"column_formats","","",11,null],[11,"values","","",12,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"fields","","",14,null],[11,"next","","",15,null],[11,"type_","","",16,null],[11,"value","","",16,null],[11,"fields","","",17,null],[11,"process_id","","",18,null],[11,"channel","","",18,null],[11,"message","","",18,null],[11,"parameters","","",19,null],[11,"next","","",20,null],[11,"size_hint","","",20,null],[11,"name","","",21,null],[11,"value","","",21,null],[11,"status","","",22,null],[11,"fields","","",23,null],[11,"next","","",24,null],[11,"name","","",25,null],[11,"table_oid","","",25,null],[11,"column_id","","",25,null],[11,"type_oid","","",25,null],[11,"type_size","","",25,null],[11,"type_modifier","","",25,null],[11,"format","","",25,null],[11,"parse","postgres_protocol::message::backend","Attempts to deserialize a backend message from the buffer.",2,null],[0,"frontend","postgres_protocol::message","Frontend message serialization.",null,null],[4,"BindError","postgres_protocol::message::frontend","",null,null],[13,"Conversion","","",26,null],[13,"Serialization","","",26,null],[5,"bind","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i"},{"name":"j"},{"name":"f"},{"name":"k"},{"name":"vec"}],"output":{"name":"result"}}],[5,"cancel_request","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"vec"}],"output":null}],[5,"close","","",null,{"inputs":[{"name":"u8"},{"name":"str"},{"name":"vec"}],"output":{"name":"result"}}],[5,"copy_data","","",null,null],[5,"copy_done","","",null,{"inputs":[{"name":"vec"}],"output":null}],[5,"copy_fail","","",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"result"}}],[5,"describe","","",null,{"inputs":[{"name":"u8"},{"name":"str"},{"name":"vec"}],"output":{"name":"result"}}],[5,"execute","","",null,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"vec"}],"output":{"name":"result"}}],[5,"parse","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i"},{"name":"vec"}],"output":{"name":"result"}}],[5,"password_message","","",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"result"}}],[5,"query","","",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":{"name":"result"}}],[5,"ssl_request","","",null,{"inputs":[{"name":"vec"}],"output":null}],[5,"startup_message","","",null,{"inputs":[{"name":"i"},{"name":"vec"}],"output":{"name":"result"}}],[5,"sync","","",null,{"inputs":[{"name":"vec"}],"output":null}],[5,"terminate","","",null,{"inputs":[{"name":"vec"}],"output":null}],[11,"from","","",26,{"inputs":[{"name":"box"}],"output":{"name":"binderror"}}],[11,"from","","",26,{"inputs":[{"name":"error"}],"output":{"name":"binderror"}}],[0,"types","postgres_protocol","Conversions to and from Postgres&#39;s binary format for various types.",null,null],[3,"HstoreEntries","postgres_protocol::types","A fallible iterator over `HSTORE` entries.",null,null],[3,"Varbit","","A `VARBIT` value.",null,null],[3,"Array","","A Postgres array.",null,null],[3,"ArrayDimensions","","An iterator over the dimensions of an array.",null,null],[3,"ArrayDimension","","Information about a dimension of an array.",null,null],[12,"len","","The length of this dimension.",27,null],[12,"lower_bound","","The base value used to index into this dimension.",27,null],[3,"ArrayValues","","An iterator over the values of an array, in row-major order.",null,null],[4,"RangeBound","","One side of a range.",null,null],[13,"Inclusive","","An inclusive bound.",28,null],[13,"Exclusive","","An exclusive bound.",28,null],[13,"Unbounded","","No bound.",28,null],[4,"Range","","A Postgres range.",null,null],[13,"Empty","","An empty range.",29,null],[13,"Nonempty","","A nonempty range.",29,null],[5,"bool_to_sql","","Serializes a `BOOL` value.",null,{"inputs":[{"name":"bool"},{"name":"vec"}],"output":null}],[5,"bool_from_sql","","Deserializes a `BOOL` value.",null,null],[5,"bytea_to_sql","","Serializes a `BYTEA` value.",null,null],[5,"bytea_from_sql","","Deserializes a `BYTEA value.",null,null],[5,"text_to_sql","","Serializes a `TEXT`, `VARCHAR`, `CHAR(n)`, `NAME`, or `CITEXT` value.",null,{"inputs":[{"name":"str"},{"name":"vec"}],"output":null}],[5,"text_from_sql","","Deserializes a `TEXT`, `VARCHAR`, `CHAR(n)`, `NAME`, or `CITEXT` value.",null,null],[5,"char_to_sql","","Serializes a `&quot;char&quot;` value.",null,{"inputs":[{"name":"i8"},{"name":"vec"}],"output":null}],[5,"char_from_sql","","Deserializes a `&quot;char&quot;` value.",null,null],[5,"int2_to_sql","","Serializes an `INT2` value.",null,{"inputs":[{"name":"i16"},{"name":"vec"}],"output":null}],[5,"int2_from_sql","","Deserializes an `INT2` value.",null,null],[5,"int4_to_sql","","Serializes an `INT4` value.",null,{"inputs":[{"name":"i32"},{"name":"vec"}],"output":null}],[5,"int4_from_sql","","Deserializes an `INT4` value.",null,null],[5,"oid_to_sql","","Serializes an `OID` value.",null,{"inputs":[{"name":"oid"},{"name":"vec"}],"output":null}],[5,"oid_from_sql","","Deserializes an `OID` value.",null,null],[5,"int8_to_sql","","Serializes an `INT8` value.",null,{"inputs":[{"name":"i64"},{"name":"vec"}],"output":null}],[5,"int8_from_sql","","Deserializes an `INT8` value.",null,null],[5,"float4_to_sql","","Serializes a `FLOAT4` value.",null,{"inputs":[{"name":"f32"},{"name":"vec"}],"output":null}],[5,"float4_from_sql","","Deserializes a `FLOAT4` value.",null,null],[5,"float8_to_sql","","Serializes a `FLOAT8` value.",null,{"inputs":[{"name":"f64"},{"name":"vec"}],"output":null}],[5,"float8_from_sql","","Deserializes a `FLOAT8` value.",null,null],[5,"hstore_to_sql","","Serializes an `HSTORE` value.",null,{"inputs":[{"name":"i"},{"name":"vec"}],"output":{"name":"result"}}],[5,"hstore_from_sql","","Deserializes an `HSTORE` value.",null,null],[5,"varbit_to_sql","","Serializes a `VARBIT` or `BIT` value.",null,{"inputs":[{"name":"usize"},{"name":"i"},{"name":"vec"}],"output":{"name":"result"}}],[5,"varbit_from_sql","","Deserializes a `VARBIT` or `BIT` value.",null,null],[5,"timestamp_to_sql","","Serializes a `TIMESTAMP` or `TIMESTAMPTZ` value.",null,{"inputs":[{"name":"i64"},{"name":"vec"}],"output":null}],[5,"timestamp_from_sql","","Deserializes a `TIMESTAMP` or `TIMESTAMPTZ` value.",null,null],[5,"date_to_sql","","Serializes a `DATE` value.",null,{"inputs":[{"name":"i32"},{"name":"vec"}],"output":null}],[5,"date_from_sql","","Deserializes a `DATE` value.",null,null],[5,"time_to_sql","","Serializes a `TIME` or `TIMETZ` value.",null,{"inputs":[{"name":"i64"},{"name":"vec"}],"output":null}],[5,"time_from_sql","","Deserializes a `TIME` or `TIMETZ` value.",null,null],[5,"macaddr_to_sql","","Serializes a `MACADDR` value.",null,null],[5,"macaddr_from_sql","","Deserializes a `MACADDR` value.",null,null],[5,"uuid_to_sql","","Serializes a `UUID` value.",null,null],[5,"uuid_from_sql","","Deserializes a `UUID` value.",null,null],[5,"array_to_sql","","Serializes an array value.",null,{"inputs":[{"name":"i"},{"name":"bool"},{"name":"oid"},{"name":"j"},{"name":"f"},{"name":"vec"}],"output":{"name":"result"}}],[5,"array_from_sql","","Deserializes an array value.",null,null],[5,"empty_range_to_sql","","Serializes an empty range.",null,{"inputs":[{"name":"vec"}],"output":null}],[5,"range_to_sql","","Serializes a range value.",null,{"inputs":[{"name":"f"},{"name":"g"},{"name":"vec"}],"output":{"name":"result"}}],[5,"range_from_sql","","Deserializes a range value.",null,null],[11,"next","","",30,null],[11,"size_hint","","",30,null],[11,"len","","Returns the number of bits.",31,null],[11,"bytes","","Returns the bits as a slice of bytes.",31,null],[11,"has_nulls","","Returns true if there are `NULL` elements.",32,null],[11,"element_type","","Returns the OID of the elements of the array.",32,null],[11,"dimensions","","Returns an iterator over the dimensions of the array.",32,null],[11,"values","","Returns an iterator over the values of the array.",32,null],[11,"next","","",33,null],[11,"size_hint","","",33,null],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"next","","",34,null],[11,"size_hint","","",34,null],[6,"Oid","postgres_protocol","A Postgres OID.",null,null]],"paths":[[4,"IsNull"],[3,"RowDescriptionEntry"],[4,"Message"],[4,"ParseResult"],[4,"Message"],[3,"AuthenticationMd5PasswordBody"],[3,"BackendKeyDataBody"],[3,"CommandCompleteBody"],[3,"CopyDataBody"],[3,"CopyInResponseBody"],[3,"ColumnFormats"],[3,"CopyOutResponseBody"],[3,"DataRowBody"],[3,"DataRowValues"],[3,"ErrorResponseBody"],[3,"ErrorFields"],[3,"ErrorField"],[3,"NoticeResponseBody"],[3,"NotificationResponseBody"],[3,"ParameterDescriptionBody"],[3,"Parameters"],[3,"ParameterStatusBody"],[3,"ReadyForQueryBody"],[3,"RowDescriptionBody"],[3,"Fields"],[3,"Field"],[4,"BindError"],[3,"ArrayDimension"],[4,"RangeBound"],[4,"Range"],[3,"HstoreEntries"],[3,"Varbit"],[3,"Array"],[3,"ArrayDimensions"],[3,"ArrayValues"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",0,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,null],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,null],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",1,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",1,null]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["bufstream"] = {"doc":"A crate for separately buffered streams.","items":[[3,"BufStream","bufstream","Wraps a Stream and buffers input and output to and from it.",null,null],[3,"IntoInnerError","","An error returned by `into_inner` which combines an error that\nhappened while writing out the buffer, and the buffered writer object\nwhich may be used to recover from the condition.",null,null],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[11,"with_capacities","","Creates a new buffered stream with explicitly listed capacities for the\nreader/writer buffer.",0,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"new","","Creates a new buffered stream with the default reader/writer buffer\ncapacities.",0,{"inputs":[{"name":"s"}],"output":{"name":"bufstream"}}],[11,"get_ref","","Gets a reference to the underlying stream.",0,null],[11,"get_mut","","Gets a mutable reference to the underlying stream.",0,null],[11,"into_inner","","Unwraps this `BufStream`, returning the underlying stream.",0,null],[11,"fill_buf","","",0,null],[11,"consume","","",0,null],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,null]],"paths":[[3,"BufStream"],[3,"IntoInnerError"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",1,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",1,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",6,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",6,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",7,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",8,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",9,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",10,null],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",11,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",11,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",11,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",11,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",11,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",11,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",11,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",11,null],[10,"swap_bytes","","Reverses the byte order of the integer.",11,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",11,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",11,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,null],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",12,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",12,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",12,null],[10,"floor","","Returns the largest integer less than or equal to a number.",12,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",12,null],[10,"trunc","","Return the integer part of a number.",12,null],[10,"fract","","Returns the fractional part of a number.",12,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",12,null],[10,"signum","","Returns a number that represents the sign of `self`.",12,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",12,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",12,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",12,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,null],[10,"powi","","Raise a number to an integer power.",12,null],[10,"powf","","Raise a number to a floating point power.",12,null],[10,"sqrt","","Take the square root of a number.",12,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,null],[10,"exp2","","Returns `2^(self)`.",12,null],[10,"ln","","Returns the natural logarithm of the number.",12,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,null],[10,"log2","","Returns the base 2 logarithm of the number.",12,null],[10,"log10","","Returns the base 10 logarithm of the number.",12,null],[11,"to_degrees","","Converts radians to degrees.",12,null],[11,"to_radians","","Converts degrees to radians.",12,null],[10,"max","","Returns the maximum of the two numbers.",12,null],[10,"min","","Returns the minimum of the two numbers.",12,null],[10,"abs_sub","","The positive difference of two numbers.",12,null],[10,"cbrt","","Take the cubic root of a number.",12,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",12,null],[10,"sin","","Computes the sine of a number (in radians).",12,null],[10,"cos","","Computes the cosine of a number (in radians).",12,null],[10,"tan","","Computes the tangent of a number (in radians).",12,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",12,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",12,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",12,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",12,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",12,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",12,null],[10,"sinh","","Hyperbolic sine function.",12,null],[10,"cosh","","Hyperbolic cosine function.",12,null],[10,"tanh","","Hyperbolic tangent function.",12,null],[10,"asinh","","Inverse hyperbolic sine function.",12,null],[10,"acosh","","Inverse hyperbolic cosine function.",12,null],[10,"atanh","","Inverse hyperbolic tangent function.",12,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",12,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"pow","num","",null,null],[5,"pow","num::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"cmp","","",4,null],[11,"fmt","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"clone","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"clone","","",2,null],[11,"next","","",2,null],[11,"clone","","",3,null],[11,"next","","",3,null]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[5,"div_rem","num_integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null]],"paths":[[8,"Integer"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[11,"to_degrees","","Converts radians to degrees.",11,null],[11,"to_radians","","Converts degrees to radians.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",12,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",16,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",16,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",16,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",16,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",16,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",16,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",16,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",16,null],[10,"swap_bytes","","Reverses the byte order of the integer.",16,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",16,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",16,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",16,null],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",17,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",15,null],[12,"sa_data","","",15,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",16,null],[12,"sin_port","","",16,null],[12,"sin_addr","","",16,null],[12,"sin_zero","","",16,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",17,null],[12,"sin6_port","","",17,null],[12,"sin6_flowinfo","","",17,null],[12,"sin6_addr","","",17,null],[12,"sin6_scope_id","","",17,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",18,null],[12,"sun_path","","",18,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",19,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",20,null],[12,"ai_family","","",20,null],[12,"ai_socktype","","",20,null],[12,"ai_protocol","","",20,null],[12,"ai_addrlen","","",20,null],[12,"ai_addr","","",20,null],[12,"ai_canonname","","",20,null],[12,"ai_next","","",20,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",21,null],[12,"nl_pid","","",21,null],[12,"nl_groups","","",21,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",22,null],[12,"sll_protocol","","",22,null],[12,"sll_ifindex","","",22,null],[12,"sll_hatype","","",22,null],[12,"sll_pkttype","","",22,null],[12,"sll_halen","","",22,null],[12,"sll_addr","","",22,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",23,null],[12,"tm_min","","",23,null],[12,"tm_hour","","",23,null],[12,"tm_mday","","",23,null],[12,"tm_mon","","",23,null],[12,"tm_year","","",23,null],[12,"tm_wday","","",23,null],[12,"tm_yday","","",23,null],[12,"tm_isdst","","",23,null],[12,"tm_gmtoff","","",23,null],[12,"tm_zone","","",23,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",24,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",25,null],[12,"dli_fbase","","",25,null],[12,"dli_sname","","",25,null],[12,"dli_saddr","","",25,null],[3,"epoll_event","","",null,null],[12,"events","","",26,null],[12,"u64","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[12,"domainname","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"dirent","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"dirent64","","",null,null],[12,"d_ino","","",30,null],[12,"d_off","","",30,null],[12,"d_reclen","","",30,null],[12,"d_type","","",30,null],[12,"d_name","","",30,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",31,null],[12,"rlim_max","","",31,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",32,null],[12,"gl_pathv","","",32,null],[12,"gl_offs","","",32,null],[12,"gl_flags","","",32,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",33,null],[12,"ifa_name","","",33,null],[12,"ifa_flags","","",33,null],[12,"ifa_addr","","",33,null],[12,"ifa_netmask","","",33,null],[12,"ifa_ifu","","",33,null],[12,"ifa_data","","",33,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",34,null],[12,"pw_passwd","","",34,null],[12,"pw_uid","","",34,null],[12,"pw_gid","","",34,null],[12,"pw_gecos","","",34,null],[12,"pw_dir","","",34,null],[12,"pw_shell","","",34,null],[3,"spwd","","",null,null],[12,"sp_namp","","",35,null],[12,"sp_pwdp","","",35,null],[12,"sp_lstchg","","",35,null],[12,"sp_min","","",35,null],[12,"sp_max","","",35,null],[12,"sp_warn","","",35,null],[12,"sp_inact","","",35,null],[12,"sp_expire","","",35,null],[12,"sp_flag","","",35,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",36,null],[12,"f_frsize","","",36,null],[12,"f_blocks","","",36,null],[12,"f_bfree","","",36,null],[12,"f_bavail","","",36,null],[12,"f_files","","",36,null],[12,"f_ffree","","",36,null],[12,"f_favail","","",36,null],[12,"f_fsid","","",36,null],[12,"f_flag","","",36,null],[12,"f_namemax","","",36,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",37,null],[12,"dqb_bsoftlimit","","",37,null],[12,"dqb_curspace","","",37,null],[12,"dqb_ihardlimit","","",37,null],[12,"dqb_isoftlimit","","",37,null],[12,"dqb_curinodes","","",37,null],[12,"dqb_btime","","",37,null],[12,"dqb_itime","","",37,null],[12,"dqb_valid","","",37,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",38,null],[12,"ssi_errno","","",38,null],[12,"ssi_code","","",38,null],[12,"ssi_pid","","",38,null],[12,"ssi_uid","","",38,null],[12,"ssi_fd","","",38,null],[12,"ssi_tid","","",38,null],[12,"ssi_band","","",38,null],[12,"ssi_overrun","","",38,null],[12,"ssi_trapno","","",38,null],[12,"ssi_status","","",38,null],[12,"ssi_int","","",38,null],[12,"ssi_ptr","","",38,null],[12,"ssi_utime","","",38,null],[12,"ssi_stime","","",38,null],[12,"ssi_addr","","",38,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",39,null],[12,"mq_maxmsg","","",39,null],[12,"mq_msgsize","","",39,null],[12,"mq_curmsgs","","",39,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",40,null],[12,"if_name","","",40,null],[3,"msginfo","","",null,null],[12,"msgpool","","",41,null],[12,"msgmap","","",41,null],[12,"msgmax","","",41,null],[12,"msgmnb","","",41,null],[12,"msgmni","","",41,null],[12,"msgssz","","",41,null],[12,"msgtql","","",41,null],[12,"msgseg","","",41,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",42,null],[12,"e_exit","","",42,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",43,null],[12,"tv_usec","","",43,null],[3,"utmpx","","",null,null],[12,"ut_type","","",44,null],[12,"ut_pid","","",44,null],[12,"ut_line","","",44,null],[12,"ut_id","","",44,null],[12,"ut_user","","",44,null],[12,"ut_host","","",44,null],[12,"ut_exit","","",44,null],[12,"ut_session","","",44,null],[12,"ut_tv","","",44,null],[12,"ut_addr_v6","","",44,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",45,null],[12,"sa_mask","","",45,null],[12,"sa_flags","","",45,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",46,null],[12,"ss_flags","","",46,null],[12,"ss_size","","",46,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",47,null],[12,"si_errno","","",47,null],[12,"si_code","","",47,null],[12,"_pad","","",47,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",48,null],[12,"gl_pathv","","",48,null],[12,"gl_offs","","",48,null],[12,"gl_flags","","",48,null],[3,"ucred","","",null,null],[12,"pid","","",49,null],[12,"uid","","",49,null],[12,"gid","","",49,null],[3,"statfs","","",null,null],[12,"f_type","","",50,null],[12,"f_bsize","","",50,null],[12,"f_blocks","","",50,null],[12,"f_bfree","","",50,null],[12,"f_bavail","","",50,null],[12,"f_files","","",50,null],[12,"f_ffree","","",50,null],[12,"f_fsid","","",50,null],[12,"f_namelen","","",50,null],[12,"f_frsize","","",50,null],[3,"msghdr","","",null,null],[12,"msg_name","","",51,null],[12,"msg_namelen","","",51,null],[12,"msg_iov","","",51,null],[12,"msg_iovlen","","",51,null],[12,"msg_control","","",51,null],[12,"msg_controllen","","",51,null],[12,"msg_flags","","",51,null],[3,"termios","","",null,null],[12,"c_iflag","","",52,null],[12,"c_oflag","","",52,null],[12,"c_cflag","","",52,null],[12,"c_lflag","","",52,null],[12,"c_line","","",52,null],[12,"c_cc","","",52,null],[12,"c_ispeed","","",52,null],[12,"c_ospeed","","",52,null],[3,"flock","","",null,null],[12,"l_type","","",53,null],[12,"l_whence","","",53,null],[12,"l_start","","",53,null],[12,"l_len","","",53,null],[12,"l_pid","","",53,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",54,null],[12,"loads","","",54,null],[12,"totalram","","",54,null],[12,"freeram","","",54,null],[12,"sharedram","","",54,null],[12,"bufferram","","",54,null],[12,"totalswap","","",54,null],[12,"freeswap","","",54,null],[12,"procs","","",54,null],[12,"pad","","",54,null],[12,"totalhigh","","",54,null],[12,"freehigh","","",54,null],[12,"mem_unit","","",54,null],[12,"_f","","",54,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",55,null],[12,"msg_stime","","",55,null],[12,"msg_rtime","","",55,null],[12,"msg_ctime","","",55,null],[12,"msg_qnum","","",55,null],[12,"msg_qbytes","","",55,null],[12,"msg_lspid","","",55,null],[12,"msg_lrpid","","",55,null],[3,"stat","","",null,null],[12,"st_dev","","",56,null],[12,"st_ino","","",56,null],[12,"st_nlink","","",56,null],[12,"st_mode","","",56,null],[12,"st_uid","","",56,null],[12,"st_gid","","",56,null],[12,"st_rdev","","",56,null],[12,"st_size","","",56,null],[12,"st_blksize","","",56,null],[12,"st_blocks","","",56,null],[12,"st_atime","","",56,null],[12,"st_atime_nsec","","",56,null],[12,"st_mtime","","",56,null],[12,"st_mtime_nsec","","",56,null],[12,"st_ctime","","",56,null],[12,"st_ctime_nsec","","",56,null],[3,"stat64","","",null,null],[12,"st_dev","","",57,null],[12,"st_ino","","",57,null],[12,"st_nlink","","",57,null],[12,"st_mode","","",57,null],[12,"st_uid","","",57,null],[12,"st_gid","","",57,null],[12,"st_rdev","","",57,null],[12,"st_size","","",57,null],[12,"st_blksize","","",57,null],[12,"st_blocks","","",57,null],[12,"st_atime","","",57,null],[12,"st_atime_nsec","","",57,null],[12,"st_mtime","","",57,null],[12,"st_mtime_nsec","","",57,null],[12,"st_ctime","","",57,null],[12,"st_ctime_nsec","","",57,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",58,null],[12,"exponent","","",58,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",59,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",60,null],[12,"swd","","",60,null],[12,"ftw","","",60,null],[12,"fop","","",60,null],[12,"rip","","",60,null],[12,"rdp","","",60,null],[12,"mxcsr","","",60,null],[12,"mxcr_mask","","",60,null],[12,"_st","","",60,null],[12,"_xmm","","",60,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",61,null],[12,"fpregs","","",61,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",62,null],[12,"uc_link","","",62,null],[12,"uc_stack","","",62,null],[12,"uc_mcontext","","",62,null],[12,"uc_sigmask","","",62,null],[3,"ipc_perm","","",null,null],[12,"__key","","",63,null],[12,"uid","","",63,null],[12,"gid","","",63,null],[12,"cuid","","",63,null],[12,"cgid","","",63,null],[12,"mode","","",63,null],[12,"__seq","","",63,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",64,null],[12,"shm_segsz","","",64,null],[12,"shm_atime","","",64,null],[12,"shm_dtime","","",64,null],[12,"shm_ctime","","",64,null],[12,"shm_cpid","","",64,null],[12,"shm_lpid","","",64,null],[12,"shm_nattch","","",64,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",65,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",66,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",67,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",68,null],[11,"clone","","",69,null],[11,"clone","","",70,null],[11,"clone","","",71,null],[11,"clone","","",72,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",73,null],[11,"clone","","",39,null],[11,"clone","","",74,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",75,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["phf_shared"] = {"doc":"","items":[[5,"displace","phf_shared","",null,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"u32"}}],[5,"split","","",null,null],[5,"hash","","`key` is from `phf_generator::HashState::key`.",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":{"name":"u64"}}],[5,"get_index","","Return an index into `phf_generator::HashState::map`.",null,null],[8,"PhfHash","","A trait implemented by types which can be used in PHF data structures.",null,null],[10,"phf_hash","","Feeds the value into the state given, updating the hasher as necessary.",0,null],[11,"phf_hash_slice","","Feeds a slice of this type into the state provided.",0,null]],"paths":[[8,"PhfHash"]]};
searchIndex["hex"] = {"doc":"","items":[[4,"FromHexError","hex","",null,null],[13,"InvalidHexCharacter","","",0,null],[12,"c","hex::FromHexError","",0,null],[12,"index","","",0,null],[13,"InvalidHexLength","hex","",0,null],[8,"ToHex","","",null,null],[10,"to_hex","","",1,null],[11,"write_hex","","",1,null],[8,"FromHex","","",null,null],[16,"Error","","",2,null],[10,"from_hex","","",2,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"description","","",0,null],[11,"fmt","","",0,null]],"paths":[[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["md5"] = {"doc":"The [MD5][1] hash function.","items":[[3,"Context","md5","A context.",null,null],[5,"compute","","Compute the digest of data.",null,null],[6,"Digest","","A digest.",null,null],[11,"new","","Create a context for computing a digest.",0,{"inputs":[],"output":{"name":"context"}}],[11,"consume","","Consume data.",0,null],[11,"compute","","Finalize and return the digest.",0,null],[11,"write","","",0,null],[11,"flush","","",0,null],[11,"from","","",1,{"inputs":[{"name":"context"}],"output":{"name":"digest"}}],[11,"clone","","",0,null]],"paths":[[3,"Context"],[6,"Digest"]]};
searchIndex["fallible_iterator"] = {"doc":"&quot;Fallible&quot; iterators.","items":[[3,"AndThen","fallible_iterator","An iterator which applies a fallible transform to the elements of the\nunderlying iterator.",null,null],[3,"Chain","","An iterator which yields the elements of one iterator followed by another.",null,null],[3,"Cloned","","An iterator which clones the elements of the underlying iterator.",null,null],[3,"Convert","","A fallible iterator that wraps a normal iterator over `Result`s.",null,null],[3,"Enumerate","","An iterator that yields the iteration count as well as the values of the\nunderlying iterator.",null,null],[3,"Filter","","An iterator which uses a predicate to determine which values of the\nunderlying iterator should be yielded.",null,null],[3,"FilterMap","","An iterator which both filters and maps the values of the underlying\niterator.",null,null],[3,"Fuse","","An iterator that yields `Ok(None)` forever after the underlying iterator\nyields `Ok(None)` once.",null,null],[3,"Iterator","","A normal (non-fallible) iterator which wraps a fallible iterator.",null,null],[3,"Map","","An iterator which applies a transform to the elements of the underlying\niterator.",null,null],[3,"MapErr","","An iterator which applies a transform to the errors of the underlying\niterator.",null,null],[3,"Peekable","","An iterator which can look at the next element without consuming it.",null,null],[3,"Rev","","An iterator which yields elements of the underlying iterator in reverse\norder.",null,null],[3,"Take","","An iterator which yields a limited number of elements from the underlying\niterator.",null,null],[3,"Zip","","An iterator that yields pairs of this iterator&#39;s and another iterator&#39;s\nvalues.",null,null],[5,"convert","","Converts an `Iterator&lt;Item = Result&lt;T, E&gt;&gt;` into a `FallibleIterator&lt;Item = T, Error = E&gt;`.",null,{"inputs":[{"name":"i"}],"output":{"name":"convert"}}],[8,"FallibleIterator","","An `Iterator`-like trait that allows for calculation of items to fail.",null,null],[16,"Item","","The type being iterated over.",0,null],[16,"Error","","The error type.",0,null],[10,"next","","Advances the iterator and returns the next value.",0,null],[11,"size_hint","","Returns bounds on the remaining length of the iterator.",0,null],[11,"all","","Determines if all elements of this iterator match a predicate.",0,null],[11,"and_then","","Returns an iterator which applies a fallible transform to the elements\nof the underlying iterator.",0,null],[11,"any","","Determines if any element of this iterator matches a predicate.",0,null],[11,"by_ref","","Borrow an iterator rather than consuming it.",0,null],[11,"chain","","Returns an iterator which yields the elements of this iterator followed\nby another.",0,null],[11,"cloned","","Returns an iterator which clones all of its elements.",0,null],[11,"count","","Consumes the iterator, returning the number of remaining items.",0,null],[11,"collect","","Transforms the iterator into a collection.",0,null],[11,"enumerate","","Returns an iterator which yields the current iteration count as well\nas the value.",0,null],[11,"filter","","Returns an iterator which uses a predicate to determine which values\nshould be yielded.",0,null],[11,"filter_map","","Returns an iterator which both filters and maps.",0,null],[11,"find","","Returns the first element of the iterator that matches a predicate.",0,null],[11,"fuse","","Returns an iterator which yields this iterator&#39;s elements and ends after\nthe first `Ok(None)`.",0,null],[11,"fold","","Applies a function over the elements of the iterator, producing a single\nfinal value.",0,null],[11,"iterator","","Returns a normal (non-fallible) iterator over `Result&lt;Item, Error&gt;`.",0,null],[11,"last","","Returns the last element of the iterator.",0,null],[11,"map","","Returns an iterator which applies a transform to the elements of the\nunderlying iterator.",0,null],[11,"map_err","","Returns an iterator which applies a transform to the errors of the\nunderlying iterator.",0,null],[11,"max","","Returns the maximal element of the iterator.",0,null],[11,"max_by_key","","Returns the element of the iterator which gives the maximum value from\nthe function.",0,null],[11,"min","","Returns the minimal element of the iterator.",0,null],[11,"min_by_key","","Returns the element of the iterator which gives the minimum value from\nthe function.",0,null],[11,"nth","","Returns the `n`th element of the iterator.",0,null],[11,"peekable","","Returns an iterator that can peek at the next element without consuming\nit.",0,null],[11,"position","","Returns the position of the first element of this iterator that matches\na predicate.",0,null],[11,"rev","","Returns an iterator that yields this iterator&#39;s items in the opposite\norder.",0,null],[11,"take","","Returns an iterator that yields only the first `n` values of this\niterator.",0,null],[11,"zip","","Returns an iterator that yields pairs of this iterator&#39;s and another\niterator&#39;s values.",0,null],[11,"cmp","","Lexicographically compares the elements of this iterator to that of\nanother.",0,null],[11,"partial_cmp","","Lexicographically compares the elements of this iterator to that of\nanother.",0,null],[11,"eq","","Determines if the elements of this iterator are equal to those of\nanother.",0,null],[11,"ne","","Determines if the elements of this iterator are not equal to those of\nanother.",0,null],[11,"lt","","Determines if the elements of this iterator are lexicographically less\nthan those of another.",0,null],[11,"le","","Determines if the elements of this iterator are lexicographically less\nthan or equal to those of another.",0,null],[11,"gt","","Determines if the elements of this iterator are lexicographically\ngreater than those of another.",0,null],[11,"ge","","Determines if the elements of this iterator are lexicographically\ngreater than or equal to those of another.",0,null],[8,"DoubleEndedFallibleIterator","","A fallible iterator able to yield elements from both ends.",null,null],[10,"next_back","","Advances the end of the iterator, returning the last value.",1,null],[8,"FromFallibleIterator","","Conversion from a fallible iterator.",null,null],[10,"from_fallible_iterator","","Creates a value from a fallible iterator.",2,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[8,"IntoFallibleIterator","","Conversion into a `FallibleIterator`.",null,null],[16,"Item","","The elements of the iterator.",3,null],[16,"Error","","The error value of the iterator.",3,null],[16,"IntoIter","","The iterator.",3,null],[10,"into_fallible_iterator","","Creates a fallible iterator from a value.",3,null],[11,"fmt","","",4,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"fmt","","",5,null],[11,"next","","",5,null],[11,"size_hint","","",5,null],[11,"count","","",5,null],[11,"next_back","","",5,null],[11,"fmt","","",6,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"count","","",6,null],[11,"next_back","","",6,null],[11,"fmt","","",7,null],[11,"next","","",7,null],[11,"size_hint","","",7,null],[11,"next_back","","",7,null],[11,"fmt","","",8,null],[11,"next","","",8,null],[11,"size_hint","","",8,null],[11,"count","","",8,null],[11,"fmt","","",9,null],[11,"next","","",9,null],[11,"size_hint","","",9,null],[11,"next_back","","",9,null],[11,"fmt","","",10,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[11,"fmt","","",11,null],[11,"next","","",11,null],[11,"size_hint","","",11,null],[11,"count","","",11,null],[11,"fmt","","",12,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"next_back","","",12,null],[11,"fmt","","",13,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"count","","",13,null],[11,"next_back","","",13,null],[11,"fmt","","",14,null],[11,"next","","",14,null],[11,"size_hint","","",14,null],[11,"count","","",14,null],[11,"next_back","","",14,null],[11,"fmt","","",15,null],[11,"peek","","Returns a reference to the next value without advancing the iterator.",15,null],[11,"next","","",15,null],[11,"size_hint","","",15,null],[11,"fmt","","",16,null],[11,"next","","",16,null],[11,"size_hint","","",16,null],[11,"count","","",16,null],[11,"next_back","","",16,null],[11,"fmt","","",17,null],[11,"next","","",17,null],[11,"size_hint","","",17,null],[11,"fmt","","",18,null],[11,"next","","",18,null],[11,"size_hint","","",18,null]],"paths":[[8,"FallibleIterator"],[8,"DoubleEndedFallibleIterator"],[8,"FromFallibleIterator"],[8,"IntoFallibleIterator"],[3,"AndThen"],[3,"Chain"],[3,"Cloned"],[3,"Convert"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Fuse"],[3,"Iterator"],[3,"Map"],[3,"MapErr"],[3,"Peekable"],[3,"Rev"],[3,"Take"],[3,"Zip"]]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
